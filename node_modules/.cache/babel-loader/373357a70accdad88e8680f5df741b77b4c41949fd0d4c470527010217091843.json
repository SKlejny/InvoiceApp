{"ast":null,"code":"var _jsxFileName = \"/workspaces/InvoiceApp/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\n// Import components\nimport ConfirmModal from './components/ConfirmModal';\nimport EditFileModal from './components/EditFileModal';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport ViewFileModal from './components/ViewFileModal';\nimport MessageDisplay from './components/MessageDisplay';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\n// Import pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n// REMOVED: import AuditTrailPage from './pages/AuditTrailPage';\n\n// Import services and constants\nimport { fetchSharePointFiles, uploadFileToSharePoint, downloadFileFromSharePoint, updateSharePointFileContent, moveSharePointFile\n// REMOVED: logAuditTrail, fetchAuditTrails // Audit log functions\n} from './services/sharepointService';\nimport { INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, FOLDER_NAMES\n// REMOVED: SHAREPOINT_SITE_ID, AUDIT_TRAIL_LIST_ID // Audit log constants\n} from './utils/constants';\nimport { loginRequest } from './authConfig';\nimport { ThemeContext } from './contexts/ThemeContext';\n\n// Icons for App.js header\nimport { Upload, RefreshCw, Settings /* REMOVED: ScrollText */ } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Console logs are for debugging; can be removed after issue is fixed\n  console.log('App component rendering. Top of function.');\n  console.log('Type of React.useState:', typeof useState);\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const [userProfile, setUserProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('theme') === 'dark';\n  });\n  const [folders, setFolders] = useState({\n    [FOLDER_NAMES.INCOMING_INVOICES]: [],\n    [FOLDER_NAMES.APPROVED_INVOICES]: [],\n    [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n    [FOLDER_NAMES.SENT_DOCUMENTS]: []\n  });\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [isExcelChoiceModalOpen, setIsExcelChoiceModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedFileName, setEditedFileName] = useState('');\n  const [editedFileContent, setEditedFileContent] = useState('');\n  console.log('App component: typeof editedFileContent after declaration =', typeof editedFileContent);\n  console.log('App component: typeof setEditedFileContent after declaration =', typeof setEditedFileContent);\n  console.log('App component: value of setEditedFileContent after declaration =', setEditedFileContent);\n  const [confirmActionDetails, setConfirmActionDetails] = useState(null);\n  const [fileToOpenInExcel, setFileToOpenInExcel] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => {\n    return localStorage.getItem('excelOpeningPreference') || 'ask';\n  });\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  // REMOVED: const [auditLogs, setAuditLogs] = useState([]);\n\n  // --- Helper Functions and Callbacks ---\n\n  const showMessage = useCallback((text, type) => {\n    setMessage({\n      text,\n      type\n    });\n  }, []);\n  const clearMessage = useCallback(() => {\n    setMessage({\n      text: '',\n      type: ''\n    });\n  }, []);\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n  const fetchUserProfile = useCallback(async () => {\n    if (accounts.length > 0) {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0]\n        });\n        const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n          headers: {\n            'Authorization': `Bearer ${response.accessToken}`\n          }\n        });\n        if (graphResponse.ok) {\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n        } else {\n          console.error(\"Failed to fetch user profile:\", await graphResponse.text());\n        }\n      } catch (error) {\n        console.error(\"Error acquiring token for user profile:\", error);\n        if (error instanceof InteractionRequiredAuthError) {\n          instance.acquireTokenRedirect(loginRequest);\n        }\n      }\n    }\n  }, [accounts, instance]);\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const allFolders = await fetchSharePointFiles(instance, accounts);\n      setFolders(allFolders);\n      showMessage('Files refreshed successfully!', 'success');\n    } catch (error) {\n      console.error(\"Error fetching SharePoint files:\", error);\n      showMessage(`Failed to load files: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n  // REMOVED: fetchAuditLogs callback\n  /*\n  const fetchAuditLogs = useCallback(async () => {\n    setIsLoading(true);\n    try {\n        const logs = await fetchAuditTrails(instance, accounts);\n        setAuditLogs(logs);\n    } catch (error) {\n        console.error(\"Error fetching audit logs:\", error);\n        showMessage(`Failed to load audit logs: ${error.message}`, 'error');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  */\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserProfile();\n      fetchSharePointData();\n    }\n  }, [isAuthenticated, fetchUserProfile, fetchSharePointData]);\n\n  // --- MSAL Auth Handlers ---\n\n  const handleMicrosoftLogin = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await instance.loginPopup(loginRequest);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      showMessage(`Login failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, showMessage]);\n  const handleLogout = useCallback(() => {\n    instance.logoutPopup();\n    setUserProfile(null);\n    setFolders({\n      [FOLDER_NAMES.INCOMING_INVOICES]: [],\n      [FOLDER_NAMES.APPROVED_INVOICES]: [],\n      [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n      [FOLDER_NAMES.SENT_DOCUMENTS]: []\n    });\n    setCurrentPage('login');\n  }, [instance]);\n\n  // --- File Operations Handlers ---\n\n  const handleRefresh = useCallback(() => {\n    fetchSharePointData();\n  }, [fetchSharePointData]);\n  const handleUploadFile = useCallback(async (file, folderId) => {\n    setIsLoading(true);\n    try {\n      await uploadFileToSharePoint(file, folderId, instance, accounts);\n      showMessage('File uploaded successfully!', 'success');\n      fetchSharePointData();\n      // REMOVED: logAuditTrail call for upload\n      /*\n      logAuditTrail({\n          actionType: 'File Uploaded',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: 'N/A', \n          newLocation: folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Unknown Folder',\n          details: `Uploaded to ${folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Other Folder'}`\n      }, instance, accounts);\n      */\n    } catch (error) {\n      console.error('Upload failed:', error);\n      showMessage(`File upload failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage, fetchSharePointData]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleDownloadAndSetContent = useCallback(async file => {\n    setIsLoading(true);\n    try {\n      const content = await downloadFileFromSharePoint(file, instance, accounts);\n      setEditedFileContent(content);\n      return content;\n    } catch (error) {\n      console.error('Download failed:', error);\n      showMessage(`Failed to get file content: ${error.message}`, 'error');\n      setEditedFileContent('');\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  const handleEditClick = useCallback(async file => {\n    setSelectedFile(file);\n    setEditedFileName(file.name);\n    setIsEditModalOpen(true);\n    if (file.type !== 'xlsx') {\n      await handleDownloadAndSetContent(file);\n    } else {\n      // NEW DIAGNOSTIC LOGS: Before calling setEditedFileContent for XLSX in handleEditClick\n      console.log('handleEditClick: Inside XLSX block. About to call setEditedFileContent.');\n      console.log('handleEditClick: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleEditClick: value of setEditedFileContent =', setEditedFileContent);\n      setEditedFileContent('');\n    }\n  }, [handleDownloadAndSetContent, setEditedFileContent]);\n  const openInExcelDesktop = useCallback(file => {\n    if (file && file.webUrl) {\n      const encodedUrl = encodeURIComponent(file.webUrl);\n      window.location.href = `ms-excel:ofe|u|${encodedUrl}`;\n      showMessage(`Attempting to open \"${file.name}\" in Excel desktop app.`, 'info');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n  const openInExcelWeb = useCallback(file => {\n    if (file && file.webUrl) {\n      window.open(file.webUrl, '_blank');\n      showMessage(`Opened \"${file.name}\" in Excel Online.`, 'success');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n  const handleSaveEdit = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsConfirmModalOpen(false);\n    if (selectedFile.type === 'xlsx') {\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(selectedFile);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(selectedFile);\n      } else {\n        setFileToOpenInExcel(selectedFile);\n        setIsExcelChoiceModalOpen(true);\n      }\n      // REMOVED: logAuditTrail call for Excel open\n      /*\n      logAuditTrail({\n          actionType: `File Opened - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: selectedFile.name,\n          fileId: selectedFile.id,\n          details: `Opened for edit (Excel file)`\n      }, instance, accounts);\n      */\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n      return;\n    }\n    setIsLoading(true);\n    try {\n      await updateSharePointFileContent(selectedFile.id, editedFileName, editedFileContent, instance, accounts);\n      showMessage('File updated successfully!', 'success');\n      // REMOVED: logAuditTrail call for edit\n      /*\n      logAuditTrail({\n          actionType: 'File Edited',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: editedFileName,\n          fileId: selectedFile.id,\n          details: `Content and/or name updated. Original name: ${selectedFile.name}`\n      }, instance, accounts);\n      */\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n    } catch (error) {\n      console.error('Save edit failed:', error);\n      showMessage(`Save failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile, editedFileName, showMessage, editedFileContent, instance, accounts, fetchSharePointData, excelOpeningPreference, openInExcelWeb, openInExcelDesktop]);\n  const handleView = useCallback(async file => {\n    setSelectedFile(file);\n    setIsViewModalOpen(true);\n    if (file.type === 'xlsx' && file.webUrl) {\n      // Diagnostic console logs:\n      console.log('handleView: Inside XLSX block. About to call setEditedFileContent.');\n      console.log('handleView: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleView: value of setEditedFileContent =', setEditedFileContent);\n      setEditedFileContent(''); // <-- The problematic line\n\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(file);\n        setIsViewModalOpen(false);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(file);\n        setIsViewModalOpen(false);\n      } else {\n        setFileToOpenInExcel(file);\n        setIsExcelChoiceModalOpen(true);\n        setIsViewModalOpen(false);\n      }\n      // REMOVED: logAuditTrail call for view\n      /*\n      logAuditTrail({\n          actionType: `File Viewed - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (Excel file)`\n      }, instance, accounts);\n      */\n    } else {\n      await handleDownloadAndSetContent(file);\n      // REMOVED: logAuditTrail call for view\n      /*\n      logAuditTrail({\n          actionType: 'File Viewed',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (PDF/Text/Image file)`\n      }, instance, accounts);\n      */\n    }\n  }, [handleDownloadAndSetContent, showMessage, excelOpeningPreference, openInExcelWeb, openInExcelDesktopdisplayName, setEditedFileContent]);\n  const handleApprove = useCallback(fileId => {\n    setConfirmActionDetails({\n      type: 'approve',\n      fileId: fileId,\n      message: 'Are you sure you want to approve this invoice and move it to Approved Invoices?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n  const handleSent = useCallback(fileId => {\n    setConfirmActionDetails({\n      type: 'sent',\n      fileId: fileId,\n      message: 'Are you sure you want to mark this document as sent and move it to Sent Documents?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n  const handleConfirmAction = useCallback(async () => {\n    if (!confirmActionDetails) return;\n    setIsConfirmModalOpen(false);\n    setIsLoading(true);\n    const {\n      type,\n      fileId\n    } = confirmActionDetails;\n    let successMessage = '';\n    let errorMessage = '';\n    // REMOVED: actionType, oldLoc, newLoc, fileAffected\n    const fileAffected = {\n      name: 'N/A'\n    }; // Placeholder for logging if needed later\n\n    try {\n      if (type === 'approve') {\n        // REMOVED: actionType, oldLoc, newLoc assignment\n        await moveSharePointFile(fileId, INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Invoice approved and moved successfully!';\n      } else if (type === 'sent') {\n        // REMOVED: actionType, oldLoc, newLoc assignment\n        await moveSharePointFile(fileId, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Document marked as sent and moved successfully!';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n      // REMOVED: logAuditTrail call\n      /*\n      logAuditTrail({\n          actionType: actionType,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: fileAffected?.name || 'N/A',\n          fileId: fileId,\n          oldLocation: oldLoc,\n          newLocation: newLoc,\n          details: `Moved from ${oldLoc} to ${newLoc}`\n      }, instance, accounts);\n      */\n    } catch (error) {\n      console.error(`Action \"${type}\" failed:`, error);\n      errorMessage = `Action failed: ${error.message}`;\n      showMessage(errorMessage, 'error');\n    } finally {\n      setIsLoading(false);\n      setConfirmActionDetails(null);\n    }\n  }, [confirmActionDetails, instance, accounts, showMessage, fetchSharePointData, userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName, folders]); // REMOVED: files, currentPage from deps\n\n  const handleOpenSettings = useCallback(() => {\n    setIsSettingsModalOpen(true);\n  }, []);\n  const handleCloseSettings = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n  const handleSetExcelOpeningPreference = useCallback(preference => {\n    setExcelOpeningPreference(preference);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative min-h-screen flex flex-col\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n        message: message,\n        onClearMessage: clearMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExcelChoiceModal, {\n        isOpen: isExcelChoiceModalOpen,\n        onClose: () => setIsExcelChoiceModalOpen(false),\n        fileName: (fileToOpenInExcel === null || fileToOpenInExcel === void 0 ? void 0 : fileToOpenInExcel.name) || '',\n        onOpenWeb: () => openInExcelWeb(fileToOpenInExcel),\n        onOpenDesktop: () => openInExcelDesktop(fileToOpenInExcel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n        isOpen: isSettingsModalOpen,\n        onClose: handleCloseSettings,\n        currentExcelPreference: excelOpeningPreference,\n        onPreferenceChange: preference => setExcelOpeningPreference(preference),\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow\",\n        children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleMicrosoftLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"flex justify-between items-center p-4 bg-light-bg-card shadow-md  dark:bg-dark-bg-card dark:text-text-primary-dark dark:border-b dark:border-border-subtle-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-text-primary-light dark:text-text-primary-dark\",\n              children: \"Invoice System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"fileUploadInput\",\n                style: {\n                  display: 'none'\n                },\n                onChange: e => {\n                  if (e.target.files && e.target.files[0]) {\n                    handleUploadFile(e.target.files[0], INCOMING_INVOICES_FOLDER_ITEM_ID);\n                    e.target.value = '';\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => document.getElementById('fileUploadInput').click(),\n                className: \"px-4 py-2 bg-brand-orange-light text-white rounded-lg shadow-md  hover:bg-brand-orange-dark transition duration-200 flex items-center\",\n                \"aria-label\": \"Upload new file\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 18,\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this), \" Upload File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefresh,\n                className: \"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md  hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center  dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\",\n                \"aria-label\": \"Refresh file list\",\n                children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                  size: 18,\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), \" Refresh Files\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleOpenSettings,\n                className: \"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md  hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center  dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\",\n                \"aria-label\": \"Open settings\",\n                children: /*#__PURE__*/_jsxDEV(Settings, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), currentPage === 'dashboard' && /*#__PURE__*/_jsxDEV(DashboardPage, {\n            userProfile: userProfile,\n            folders: folders,\n            setCurrentPage: setCurrentPage,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), currentPage === 'incomingInvoices' && /*#__PURE__*/_jsxDEV(IncomingInvoicesPage, {\n            files: folders[FOLDER_NAMES.INCOMING_INVOICES],\n            setCurrentPage: setCurrentPage,\n            onEdit: handleEditClick,\n            onApprove: handleApprove,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this), currentPage === 'publishedDocuments' && /*#__PURE__*/_jsxDEV(PublishedDocumentsPage, {\n            files: folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS],\n            setCurrentPage: setCurrentPage,\n            onView: handleView,\n            onSent: handleSent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this), currentPage === 'approvedInvoices' && /*#__PURE__*/_jsxDEV(ApprovedInvoicesPage, {\n            files: folders[FOLDER_NAMES.APPROVED_INVOICES],\n            setCurrentPage: setCurrentPage,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), currentPage === 'sentDocuments' && /*#__PURE__*/_jsxDEV(SentDocumentsPage, {\n            files: folders[FOLDER_NAMES.SENT_DOCUMENTS],\n            setCurrentPage: setCurrentPage,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditFileModal, {\n        isOpen: isEditModalOpen,\n        onClose: () => {\n          setIsEditModalOpen(false);\n          if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n            URL.revokeObjectURL(editedFileContent);\n          }\n          setSelectedFile(null);\n          setEditedFileName('');\n          setEditedFileContent('');\n        },\n        fileName: editedFileName,\n        onFileNameChange: e => setEditedFileName(e.target.value),\n        fileContent: editedFileContent,\n        onFileContentChange: e => setEditedFileContent(e.target.value),\n        onSave: handleSaveEdit,\n        selectedFileType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type,\n        selectedFileMimeType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.mimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewFileModal, {\n        isOpen: isViewModalOpen,\n        onClose: () => {\n          setIsViewModalOpen(false);\n          if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n            URL.revokeObjectURL(editedFileContent);\n          }\n          setSelectedFile(null);\n          setEditedFileContent('');\n        },\n        fileName: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || '',\n        fileContent: editedFileContent,\n        selectedFileType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type,\n        selectedFileMimeType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.mimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n        isOpen: isConfirmModalOpen,\n        onClose: () => setIsConfirmModalOpen(false),\n        onConfirm: handleConfirmAction,\n        message: (confirmActionDetails === null || confirmActionDetails === void 0 ? void 0 : confirmActionDetails.message) || \"Are you sure you want to proceed?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1xrIVncIAYSyh6I9LIfmUT2++vk=\", false, function () {\n  return [useMsal, useIsAuthenticated];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMsal","useIsAuthenticated","InteractionRequiredAuthError","ConfirmModal","EditFileModal","LoadingSpinner","ViewFileModal","MessageDisplay","ExcelChoiceModal","SettingsModal","LoginPage","DashboardPage","IncomingInvoicesPage","PublishedDocumentsPage","ApprovedInvoicesPage","SentDocumentsPage","fetchSharePointFiles","uploadFileToSharePoint","downloadFileFromSharePoint","updateSharePointFileContent","moveSharePointFile","INCOMING_INVOICES_FOLDER_ITEM_ID","APPROVED_INVOICES_FOLDER_ITEM_ID","PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID","SENT_FOLDER_ITEM_ID","FOLDER_NAMES","loginRequest","ThemeContext","Upload","RefreshCw","Settings","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","console","log","instance","accounts","isAuthenticated","userProfile","setUserProfile","isLoading","setIsLoading","message","setMessage","text","type","isDarkMode","setIsDarkMode","localStorage","getItem","folders","setFolders","INCOMING_INVOICES","APPROVED_INVOICES","PUBLISHED_DOCUMENTS","SENT_DOCUMENTS","isEditModalOpen","setIsEditModalOpen","isViewModalOpen","setIsViewModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","isExcelChoiceModalOpen","setIsExcelChoiceModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","selectedFile","setSelectedFile","editedFileName","setEditedFileName","editedFileContent","setEditedFileContent","confirmActionDetails","setConfirmActionDetails","fileToOpenInExcel","setFileToOpenInExcel","excelOpeningPreference","setExcelOpeningPreference","currentPage","setCurrentPage","showMessage","clearMessage","toggleDarkMode","prevMode","newMode","setItem","document","documentElement","classList","add","remove","fetchUserProfile","length","response","acquireTokenSilent","account","graphResponse","fetch","headers","accessToken","ok","profile","json","error","acquireTokenRedirect","fetchSharePointData","allFolders","handleMicrosoftLogin","loginPopup","handleLogout","logoutPopup","handleRefresh","handleUploadFile","file","folderId","handleDownloadAndSetContent","content","handleEditClick","name","openInExcelDesktop","webUrl","encodedUrl","encodeURIComponent","window","location","href","openInExcelWeb","open","handleSaveEdit","id","handleView","openInExcelDesktopdisplayName","handleApprove","fileId","handleSent","handleConfirmAction","successMessage","errorMessage","fileAffected","displayName","handleOpenSettings","handleCloseSettings","handleSetExcelOpeningPreference","preference","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClearMessage","isOpen","onClose","onOpenWeb","onOpenDesktop","currentExcelPreference","onPreferenceChange","onLogin","style","display","onChange","e","target","files","onClick","getElementById","click","size","onLogout","onEdit","onApprove","onView","onSent","startsWith","URL","revokeObjectURL","onFileNameChange","fileContent","onFileContentChange","onSave","selectedFileType","selectedFileMimeType","mimeType","onConfirm","_c","$RefreshReg$"],"sources":["/workspaces/InvoiceApp/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\n// Import components\nimport ConfirmModal from './components/ConfirmModal';\nimport EditFileModal from './components/EditFileModal';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport ViewFileModal from './components/ViewFileModal';\nimport MessageDisplay from './components/MessageDisplay';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\n// Import pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n// REMOVED: import AuditTrailPage from './pages/AuditTrailPage';\n\n// Import services and constants\nimport {\n  fetchSharePointFiles,\n  uploadFileToSharePoint,\n  downloadFileFromSharePoint,\n  updateSharePointFileContent,\n  moveSharePointFile,\n  // REMOVED: logAuditTrail, fetchAuditTrails // Audit log functions\n} from './services/sharepointService';\nimport {\n  INCOMING_INVOICES_FOLDER_ITEM_ID,\n  APPROVED_INVOICES_FOLDER_ITEM_ID,\n  PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID,\n  SENT_FOLDER_ITEM_ID,\n  FOLDER_NAMES,\n  // REMOVED: SHAREPOINT_SITE_ID, AUDIT_TRAIL_LIST_ID // Audit log constants\n} from './utils/constants';\nimport { loginRequest } from './authConfig';\nimport { ThemeContext } from './contexts/ThemeContext';\n\n// Icons for App.js header\nimport { Upload, RefreshCw, Settings /* REMOVED: ScrollText */ } from 'lucide-react';\n\n\nfunction App() {\n  // Console logs are for debugging; can be removed after issue is fixed\n  console.log('App component rendering. Top of function.');\n  console.log('Type of React.useState:', typeof useState); \n\n  const { instance, accounts } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('theme') === 'dark';\n  });\n\n  const [folders, setFolders] = useState({\n    [FOLDER_NAMES.INCOMING_INVOICES]: [],\n    [FOLDER_NAMES.APPROVED_INVOICES]: [],\n    [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n    [FOLDER_NAMES.SENT_DOCUMENTS]: [],\n  });\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [isExcelChoiceModalOpen, setIsExcelChoiceModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedFileName, setEditedFileName] = useState('');\n  const [editedFileContent, setEditedFileContent] = useState('');\n  console.log('App component: typeof editedFileContent after declaration =', typeof editedFileContent);\n  console.log('App component: typeof setEditedFileContent after declaration =', typeof setEditedFileContent);\n  console.log('App component: value of setEditedFileContent after declaration =', setEditedFileContent);\n\n  const [confirmActionDetails, setConfirmActionDetails] = useState(null);\n  const [fileToOpenInExcel, setFileToOpenInExcel] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => {\n    return localStorage.getItem('excelOpeningPreference') || 'ask';\n  });\n\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  // REMOVED: const [auditLogs, setAuditLogs] = useState([]);\n\n\n  // --- Helper Functions and Callbacks ---\n\n  const showMessage = useCallback((text, type) => {\n    setMessage({ text, type });\n  }, []);\n\n  const clearMessage = useCallback(() => {\n    setMessage({ text: '', type: '' });\n  }, []);\n\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n\n  const fetchUserProfile = useCallback(async () => {\n    if (accounts.length > 0) {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0]\n        });\n        const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n          headers: {\n            'Authorization': `Bearer ${response.accessToken}`\n          }\n        });\n        if (graphResponse.ok) {\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n        } else {\n          console.error(\"Failed to fetch user profile:\", await graphResponse.text());\n        }\n      } catch (error) {\n        console.error(\"Error acquiring token for user profile:\", error);\n        if (error instanceof InteractionRequiredAuthError) {\n          instance.acquireTokenRedirect(loginRequest);\n        }\n      }\n    }\n  }, [accounts, instance]);\n\n\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const allFolders = await fetchSharePointFiles(instance, accounts);\n      setFolders(allFolders);\n      showMessage('Files refreshed successfully!', 'success');\n    } catch (error) {\n      console.error(\"Error fetching SharePoint files:\", error);\n      showMessage(`Failed to load files: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n  // REMOVED: fetchAuditLogs callback\n  /*\n  const fetchAuditLogs = useCallback(async () => {\n    setIsLoading(true);\n    try {\n        const logs = await fetchAuditTrails(instance, accounts);\n        setAuditLogs(logs);\n    } catch (error) {\n        console.error(\"Error fetching audit logs:\", error);\n        showMessage(`Failed to load audit logs: ${error.message}`, 'error');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  */\n\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserProfile();\n      fetchSharePointData();\n    }\n  }, [isAuthenticated, fetchUserProfile, fetchSharePointData]);\n\n\n  // --- MSAL Auth Handlers ---\n\n  const handleMicrosoftLogin = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await instance.loginPopup(loginRequest);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      showMessage(`Login failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, showMessage]);\n\n  const handleLogout = useCallback(() => {\n    instance.logoutPopup();\n    setUserProfile(null);\n    setFolders({\n      [FOLDER_NAMES.INCOMING_INVOICES]: [],\n      [FOLDER_NAMES.APPROVED_INVOICES]: [],\n      [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n      [FOLDER_NAMES.SENT_DOCUMENTS]: [],\n    });\n    setCurrentPage('login');\n  }, [instance]);\n\n\n  // --- File Operations Handlers ---\n\n  const handleRefresh = useCallback(() => {\n    fetchSharePointData();\n  }, [fetchSharePointData]);\n\n\n  const handleUploadFile = useCallback(async (file, folderId) => {\n    setIsLoading(true);\n    try {\n      await uploadFileToSharePoint(file, folderId, instance, accounts);\n      showMessage('File uploaded successfully!', 'success');\n      fetchSharePointData();\n      // REMOVED: logAuditTrail call for upload\n      /*\n      logAuditTrail({\n          actionType: 'File Uploaded',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: 'N/A', \n          newLocation: folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Unknown Folder',\n          details: `Uploaded to ${folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Other Folder'}`\n      }, instance, accounts);\n      */\n    } catch (error) {\n      console.error('Upload failed:', error);\n      showMessage(`File upload failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage, fetchSharePointData]);\n\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleDownloadAndSetContent = useCallback(async (file) => {\n    setIsLoading(true);\n    try {\n      const content = await downloadFileFromSharePoint(file, instance, accounts);\n      setEditedFileContent(content);\n      return content;\n    } catch (error) {\n      console.error('Download failed:', error);\n      showMessage(`Failed to get file content: ${error.message}`, 'error');\n      setEditedFileContent('');\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n\n  const handleEditClick = useCallback(async (file) => {\n    setSelectedFile(file);\n    setEditedFileName(file.name);\n    setIsEditModalOpen(true);\n    if (file.type !== 'xlsx') {\n      await handleDownloadAndSetContent(file);\n    } else {\n      // NEW DIAGNOSTIC LOGS: Before calling setEditedFileContent for XLSX in handleEditClick\n      console.log('handleEditClick: Inside XLSX block. About to call setEditedFileContent.');\n      console.log('handleEditClick: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleEditClick: value of setEditedFileContent =', setEditedFileContent);\n      setEditedFileContent('');\n    }\n  }, [handleDownloadAndSetContent, setEditedFileContent]);\n\n\n  const openInExcelDesktop = useCallback((file) => {\n    if (file && file.webUrl) {\n      const encodedUrl = encodeURIComponent(file.webUrl);\n      window.location.href = `ms-excel:ofe|u|${encodedUrl}`;\n      showMessage(`Attempting to open \"${file.name}\" in Excel desktop app.`, 'info');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n\n  const openInExcelWeb = useCallback((file) => {\n    if (file && file.webUrl) {\n      window.open(file.webUrl, '_blank');\n      showMessage(`Opened \"${file.name}\" in Excel Online.`, 'success');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n\n\n  const handleSaveEdit = useCallback(async () => {\n    if (!selectedFile) return;\n\n    setIsConfirmModalOpen(false);\n\n    if (selectedFile.type === 'xlsx') {\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(selectedFile);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(selectedFile);\n      } else {\n        setFileToOpenInExcel(selectedFile);\n        setIsExcelChoiceModalOpen(true);\n      }\n      // REMOVED: logAuditTrail call for Excel open\n      /*\n      logAuditTrail({\n          actionType: `File Opened - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: selectedFile.name,\n          fileId: selectedFile.id,\n          details: `Opened for edit (Excel file)`\n      }, instance, accounts);\n      */\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await updateSharePointFileContent(selectedFile.id, editedFileName, editedFileContent, instance, accounts);\n      showMessage('File updated successfully!', 'success');\n      // REMOVED: logAuditTrail call for edit\n      /*\n      logAuditTrail({\n          actionType: 'File Edited',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: editedFileName,\n          fileId: selectedFile.id,\n          details: `Content and/or name updated. Original name: ${selectedFile.name}`\n      }, instance, accounts);\n      */\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n    } catch (error) {\n      console.error('Save edit failed:', error);\n      showMessage(`Save failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile, editedFileName,showMessage, editedFileContent, instance, accounts, fetchSharePointData, excelOpeningPreference, openInExcelWeb, openInExcelDesktop]);\n\n\n  const handleView = useCallback(async (file) => {\n    setSelectedFile(file);\n    setIsViewModalOpen(true);\n\n    if (file.type === 'xlsx' && file.webUrl) {\n      // Diagnostic console logs:\n      console.log('handleView: Inside XLSX block. About to call setEditedFileContent.');\n      console.log('handleView: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleView: value of setEditedFileContent =', setEditedFileContent);\n\n      setEditedFileContent(''); // <-- The problematic line\n      \n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(file);\n        setIsViewModalOpen(false);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(file);\n        setIsViewModalOpen(false);\n      } else {\n        setFileToOpenInExcel(file);\n        setIsExcelChoiceModalOpen(true);\n        setIsViewModalOpen(false);\n      }\n      // REMOVED: logAuditTrail call for view\n      /*\n      logAuditTrail({\n          actionType: `File Viewed - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (Excel file)`\n      }, instance, accounts);\n      */\n    } else {\n      await handleDownloadAndSetContent(file);\n      // REMOVED: logAuditTrail call for view\n      /*\n      logAuditTrail({\n          actionType: 'File Viewed',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (PDF/Text/Image file)`\n      }, instance, accounts);\n      */\n    }\n  }, [handleDownloadAndSetContent, showMessage, excelOpeningPreference, openInExcelWeb, openInExcelDesktopdisplayName, setEditedFileContent]);\n\n\n  const handleApprove = useCallback((fileId) => {\n    setConfirmActionDetails({\n      type: 'approve',\n      fileId: fileId,\n      message: 'Are you sure you want to approve this invoice and move it to Approved Invoices?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n\n  const handleSent = useCallback((fileId) => {\n    setConfirmActionDetails({\n      type: 'sent',\n      fileId: fileId,\n      message: 'Are you sure you want to mark this document as sent and move it to Sent Documents?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n\n\n  const handleConfirmAction = useCallback(async () => {\n    if (!confirmActionDetails) return;\n\n    setIsConfirmModalOpen(false);\n    setIsLoading(true);\n\n    const { type, fileId } = confirmActionDetails;\n    let successMessage = '';\n    let errorMessage = '';\n    // REMOVED: actionType, oldLoc, newLoc, fileAffected\n    const fileAffected = { name: 'N/A' }; // Placeholder for logging if needed later\n\n    try {\n      if (type === 'approve') {\n        // REMOVED: actionType, oldLoc, newLoc assignment\n        await moveSharePointFile(fileId, INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Invoice approved and moved successfully!';\n      } else if (type === 'sent') {\n        // REMOVED: actionType, oldLoc, newLoc assignment\n        await moveSharePointFile(fileId, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Document marked as sent and moved successfully!';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n      // REMOVED: logAuditTrail call\n      /*\n      logAuditTrail({\n          actionType: actionType,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: fileAffected?.name || 'N/A',\n          fileId: fileId,\n          oldLocation: oldLoc,\n          newLocation: newLoc,\n          details: `Moved from ${oldLoc} to ${newLoc}`\n      }, instance, accounts);\n      */\n    } catch (error) {\n      console.error(`Action \"${type}\" failed:`, error);\n      errorMessage = `Action failed: ${error.message}`;\n      showMessage(errorMessage, 'error');\n    } finally {\n      setIsLoading(false);\n      setConfirmActionDetails(null);\n    }\n  }, [confirmActionDetails, instance, accounts, showMessage, fetchSharePointData, userProfile?.displayName, folders]); // REMOVED: files, currentPage from deps\n\n\n  const handleOpenSettings = useCallback(() => {\n    setIsSettingsModalOpen(true);\n  }, []);\n\n  const handleCloseSettings = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n\n  const handleSetExcelOpeningPreference = useCallback((preference) => {\n    setExcelOpeningPreference(preference);\n  }, []);\n\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\n      <div className=\"relative min-h-screen flex flex-col\">\n        {isLoading && <LoadingSpinner />}\n\n        <MessageDisplay message={message} onClearMessage={clearMessage} />\n\n        <ExcelChoiceModal\n          isOpen={isExcelChoiceModalOpen}\n          onClose={() => setIsExcelChoiceModalOpen(false)}\n          fileName={fileToOpenInExcel?.name || ''}\n          onOpenWeb={() => openInExcelWeb(fileToOpenInExcel)}\n          onOpenDesktop={() => openInExcelDesktop(fileToOpenInExcel)}\n        />\n\n        <SettingsModal\n          isOpen={isSettingsModalOpen}\n          onClose={handleCloseSettings}\n          currentExcelPreference={excelOpeningPreference}\n          onPreferenceChange={(preference) => setExcelOpeningPreference(preference)}\n          isDarkMode={isDarkMode}\n          toggleDarkMode={toggleDarkMode}\n        />\n\n        <main className=\"flex-grow\">\n          {!isAuthenticated ? (\n            <LoginPage onLogin={handleMicrosoftLogin} />\n          ) : (\n            <>\n              <header className=\"flex justify-between items-center p-4 bg-light-bg-card shadow-md \n                                 dark:bg-dark-bg-card dark:text-text-primary-dark dark:border-b dark:border-border-subtle-dark\">\n                <h1 className=\"text-2xl font-bold text-text-primary-light dark:text-text-primary-dark\">Invoice System</h1>\n                \n                <div className=\"flex space-x-4\">\n                  <input\n                    type=\"file\"\n                    id=\"fileUploadInput\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => {\n                      if (e.target.files && e.target.files[0]) {\n                        handleUploadFile(e.target.files[0], INCOMING_INVOICES_FOLDER_ITEM_ID);\n                        e.target.value = '';\n                      }\n                    }}\n                  />\n                  <button\n                    onClick={() => document.getElementById('fileUploadInput').click()}\n                    className=\"px-4 py-2 bg-brand-orange-light text-white rounded-lg shadow-md \n                               hover:bg-brand-orange-dark transition duration-200 flex items-center\"\n                    aria-label=\"Upload new file\"\n                  >\n                    <Upload size={18} className=\"mr-2\" /> Upload File\n                  </button>\n\n                  <button\n                    onClick={handleRefresh}\n                    className=\"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md \n                               hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center \n                               dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\"\n                    aria-label=\"Refresh file list\"\n                  >\n                    <RefreshCw size={18} className=\"mr-2\" /> Refresh Files\n                  </button>\n\n                  <button\n                    onClick={handleOpenSettings}\n                    className=\"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md \n                               hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center \n                               dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\"\n                    aria-label=\"Open settings\"\n                  >\n                    <Settings size={18} />\n                  </button>\n                </div>\n              </header>\n\n              {currentPage === 'dashboard' && (\n                <DashboardPage\n                  userProfile={userProfile}\n                  folders={folders}\n                  setCurrentPage={setCurrentPage}\n                  onLogout={handleLogout}\n                />\n              )}\n              {currentPage === 'incomingInvoices' && (\n                <IncomingInvoicesPage\n                  files={folders[FOLDER_NAMES.INCOMING_INVOICES]}\n                  setCurrentPage={setCurrentPage}\n                  onEdit={handleEditClick}\n                  onApprove={handleApprove}\n                  onView={handleView}\n                />\n              )}\n              {currentPage === 'publishedDocuments' && (\n                <PublishedDocumentsPage\n                  files={folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                  onSent={handleSent}\n                />\n              )}\n              {currentPage === 'approvedInvoices' && (\n                <ApprovedInvoicesPage\n                  files={folders[FOLDER_NAMES.APPROVED_INVOICES]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                />\n              )}\n              {currentPage === 'sentDocuments' && (\n                <SentDocumentsPage\n                  files={folders[FOLDER_NAMES.SENT_DOCUMENTS]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                />\n              )}\n              {/* REMOVED: currentPage === 'auditTrail' && <AuditTrailPage ... /> */}\n            </>\n          )}\n        </main>\n\n        <EditFileModal\n          isOpen={isEditModalOpen}\n          onClose={() => {\n            setIsEditModalOpen(false);\n            if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n                URL.revokeObjectURL(editedFileContent);\n            }\n            setSelectedFile(null);\n            setEditedFileName('');\n            setEditedFileContent('');\n          }}\n          fileName={editedFileName}\n          onFileNameChange={(e) => setEditedFileName(e.target.value)}\n          fileContent={editedFileContent}\n          onFileContentChange={(e) => setEditedFileContent(e.target.value)}\n          onSave={handleSaveEdit}\n          selectedFileType={selectedFile?.type}\n          selectedFileMimeType={selectedFile?.mimeType}\n        />\n        <ViewFileModal\n          isOpen={isViewModalOpen}\n          onClose={() => {\n            setIsViewModalOpen(false);\n            if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n                URL.revokeObjectURL(editedFileContent);\n            }\n            setSelectedFile(null);\n            setEditedFileContent('');\n          }}\n          fileName={selectedFile?.name || ''}\n          fileContent={editedFileContent}\n          selectedFileType={selectedFile?.type}\n          selectedFileMimeType={selectedFile?.mimeType}\n        />\n\n        <ConfirmModal\n          isOpen={isConfirmModalOpen}\n          onClose={() => setIsConfirmModalOpen(false)}\n          onConfirm={handleConfirmAction}\n          message={confirmActionDetails?.message || \"Are you sure you want to proceed?\"}\n        />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}