{"ast":null,"code":"var _jsxFileName = \"/workspaces/InvoiceApp/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { loginRequest } from './authConfig';\n\n// --- Hooks ---\nimport useGraph from './hooks/useGraph';\n\n// --- Your Original Pages ---\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage'; // Using your original file\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n\n// --- Components ---\nimport LoadingSpinner from './components/LoadingSpinner';\nimport MessageDisplay from './components/MessageDisplay';\nimport Header from './components/Header';\nimport ConfirmModal from './components/ConfirmModal';\nimport ViewFileModal from './components/ViewFileModal';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\nimport { FOLDER_DETAILS, FOLDER_NAMES } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const {\n    folders,\n    isLoading,\n    error,\n    fetchSharePointData,\n    moveSharePointFile,\n    downloadFileFromSharePoint\n  } = useGraph(instance, accounts);\n  const [userProfile, setUserProfile] = useState(null);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [isDarkMode, setIsDarkMode] = useState(() => localStorage.getItem('theme') === 'dark');\n  const [currentPage, setCurrentPage] = useState('login');\n  const [modal, setModal] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [viewedFileContent, setViewedFileContent] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => localStorage.getItem('excelOpeningPreference') || 'ask');\n  useEffect(() => {\n    if (isAuthenticated && accounts.length > 0) {\n      const fetchProfile = async () => {\n        try {\n          const response = await instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n          });\n          const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n            headers: {\n              Authorization: `Bearer ${response.accessToken}`\n            }\n          });\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n          setCurrentPage('dashboard');\n          fetchSharePointData();\n        } catch (e) {\n          console.error(e);\n          showMessage('Could not fetch user profile.', 'error');\n        }\n      };\n      fetchProfile();\n    } else {\n      setCurrentPage('login');\n    }\n  }, [isAuthenticated, accounts, instance, fetchSharePointData]);\n  useEffect(() => {\n    if (error) showMessage(error, 'error');\n  }, [error]);\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n  const showMessage = (text, type = 'info') => setMessage({\n    text,\n    type\n  });\n  const handleMicrosoftLogin = () => instance.loginPopup(loginRequest).catch(e => console.error(e));\n  const handleLogout = () => instance.logoutPopup();\n  const handleExcelOpen = useCallback(file => {\n    if (excelOpeningPreference === 'ask') {\n      setModal('excelChoice');\n    } else if (excelOpeningPreference === 'web') {\n      window.open(file.webUrl, '_blank');\n    } else {\n      window.location.href = `ms-excel:ofe|u|${encodeURIComponent(file.webUrl)}`;\n    }\n  }, [excelOpeningPreference]);\n  const handleView = useCallback(async file => {\n    setSelectedFile(file);\n    if (file.type === 'xlsx') {\n      handleExcelOpen(file);\n    } else {\n      try {\n        const content = await downloadFileFromSharePoint(file);\n        setViewedFileContent(content);\n        setModal('viewFile');\n      } catch (e) {\n        showMessage(e.message, 'error');\n      }\n    }\n  }, [downloadFileFromSharePoint, handleExcelOpen, showMessage]);\n  const handleApprove = useCallback(fileId => {\n    const fileToApprove = folders[FOLDER_NAMES.INCOMING_INVOICES].find(f => f.id === fileId);\n    setSelectedFile(fileToApprove);\n    setModal('confirmApproval');\n  }, [folders]);\n  const handleSent = useCallback(fileId => {\n    const fileToSend = folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS].find(f => f.id === fileId);\n    setSelectedFile(fileToSend);\n    setModal('confirmSent');\n  }, [folders]);\n  const handleConfirm = async () => {\n    if (!selectedFile || !modal) return;\n    const action = modal;\n    const originalFile = selectedFile;\n    setModal(null);\n    try {\n      let successMessage = '';\n      if (action === 'confirmApproval') {\n        const sourceFolderId = FOLDER_DETAILS.incomingInvoices.id;\n        const destFolderId = FOLDER_DETAILS.approvedInvoices.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File approved successfully.';\n      } else if (action === 'confirmSent') {\n        const sourceFolderId = FOLDER_DETAILS.publishedDocuments.id;\n        const destFolderId = FOLDER_DETAILS.sentDocuments.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File marked as sent.';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n    } catch (e) {\n      showMessage(e.message, 'error');\n    }\n  };\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(DashboardPage, {\n          userProfile: userProfile,\n          folders: folders,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 20\n        }, this);\n      case 'incomingInvoices':\n        return /*#__PURE__*/_jsxDEV(IncomingInvoicesPage, {\n          files: folders[FOLDER_NAMES.INCOMING_INVOICES],\n          setCurrentPage: setCurrentPage,\n          onView: handleView,\n          onApprove: handleApprove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 20\n        }, this);\n      case 'approvedInvoices':\n        return /*#__PURE__*/_jsxDEV(ApprovedInvoicesPage, {\n          files: folders[FOLDER_NAMES.APPROVED_INVOICES],\n          setCurrentPage: setCurrentPage,\n          onView: handleView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }, this);\n      case 'publishedDocuments':\n        return /*#__PURE__*/_jsxDEV(PublishedDocumentsPage, {\n          files: folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS],\n          setCurrentPage: setCurrentPage,\n          onView: handleView,\n          onSent: handleSent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 20\n        }, this);\n      case 'sentDocuments':\n        return /*#__PURE__*/_jsxDEV(SentDocumentsPage, {\n          files: folders[FOLDER_NAMES.SENT_DOCUMENTS],\n          setCurrentPage: setCurrentPage,\n          onView: handleView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 20\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleMicrosoftLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 20\n        }, this);\n    }\n  };\n  const closeModal = () => {\n    setModal(null);\n    setSelectedFile(null);\n    if (viewedFileContent && viewedFileContent.startsWith('blob:')) {\n      URL.revokeObjectURL(viewedFileContent);\n    }\n    setViewedFileContent(null);\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleMicrosoftLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n      message: message,\n      onClearMessage: () => setMessage({\n        text: '',\n        type: ''\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onLogout: handleLogout,\n      onRefresh: fetchSharePointData,\n      onSettingsClick: () => setModal('settings'),\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-4 sm:p-6 md:p-8 max-w-7xl mx-auto w-full\",\n      children: renderPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      isOpen: modal === 'confirmApproval' || modal === 'confirmSent',\n      onClose: closeModal,\n      onConfirm: handleConfirm,\n      title: modal === 'confirmApproval' ? \"Confirm Approval\" : \"Confirm Sent\",\n      message: `Are you sure you want to proceed with this action for \"${selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name}\"?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewFileModal, {\n      isOpen: modal === 'viewFile',\n      onClose: closeModal,\n      file: selectedFile,\n      content: viewedFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExcelChoiceModal, {\n      isOpen: modal === 'excelChoice',\n      onClose: closeModal,\n      fileName: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || '',\n      onOpenWeb: () => {\n        window.open(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.webUrl, '_blank');\n        closeModal();\n      },\n      onOpenDesktop: () => {\n        window.location.href = `ms-excel:ofe|u|${encodeURIComponent(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.webUrl)}`;\n        closeModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n      isOpen: modal === 'settings',\n      onClose: closeModal,\n      isDarkMode: isDarkMode,\n      toggleDarkMode: () => setIsDarkMode(prev => !prev),\n      currentExcelPreference: excelOpeningPreference,\n      onPreferenceChange: setExcelOpeningPreference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixMe0LMLa/UIxt4vX5gkRdvrhho=\", false, function () {\n  return [useMsal, useIsAuthenticated, useGraph];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMsal","useIsAuthenticated","loginRequest","useGraph","LoginPage","DashboardPage","IncomingInvoicesPage","ApprovedInvoicesPage","PublishedDocumentsPage","SentDocumentsPage","LoadingSpinner","MessageDisplay","Header","ConfirmModal","ViewFileModal","ExcelChoiceModal","SettingsModal","FOLDER_DETAILS","FOLDER_NAMES","jsxDEV","_jsxDEV","App","_s","instance","accounts","isAuthenticated","folders","isLoading","error","fetchSharePointData","moveSharePointFile","downloadFileFromSharePoint","userProfile","setUserProfile","message","setMessage","text","type","isDarkMode","setIsDarkMode","localStorage","getItem","currentPage","setCurrentPage","modal","setModal","selectedFile","setSelectedFile","viewedFileContent","setViewedFileContent","excelOpeningPreference","setExcelOpeningPreference","length","fetchProfile","response","acquireTokenSilent","account","graphResponse","fetch","headers","Authorization","accessToken","profile","json","e","console","showMessage","setItem","document","documentElement","classList","toggle","handleMicrosoftLogin","loginPopup","catch","handleLogout","logoutPopup","handleExcelOpen","file","window","open","webUrl","location","href","encodeURIComponent","handleView","content","handleApprove","fileId","fileToApprove","INCOMING_INVOICES","find","f","id","handleSent","fileToSend","PUBLISHED_DOCUMENTS","handleConfirm","action","originalFile","successMessage","sourceFolderId","incomingInvoices","destFolderId","approvedInvoices","publishedDocuments","sentDocuments","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","files","onView","onApprove","APPROVED_INVOICES","onSent","SENT_DOCUMENTS","onLogin","closeModal","startsWith","URL","revokeObjectURL","className","children","onClearMessage","onLogout","onRefresh","onSettingsClick","isOpen","onClose","onConfirm","title","name","onOpenWeb","onOpenDesktop","toggleDarkMode","prev","currentExcelPreference","onPreferenceChange","_c","$RefreshReg$"],"sources":["/workspaces/InvoiceApp/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { loginRequest } from './authConfig';\n\n// --- Hooks ---\nimport useGraph from './hooks/useGraph';\n\n// --- Your Original Pages ---\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage'; // Using your original file\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n\n// --- Components ---\nimport LoadingSpinner from './components/LoadingSpinner';\nimport MessageDisplay from './components/MessageDisplay';\nimport Header from './components/Header';\nimport ConfirmModal from './components/ConfirmModal';\nimport ViewFileModal from './components/ViewFileModal';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\nimport { FOLDER_DETAILS, FOLDER_NAMES } from './utils/constants';\n\nfunction App() {\n  const { instance, accounts } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const {\n    folders,\n    isLoading,\n    error,\n    fetchSharePointData,\n    moveSharePointFile,\n    downloadFileFromSharePoint,\n  } = useGraph(instance, accounts);\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [isDarkMode, setIsDarkMode] = useState(() => localStorage.getItem('theme') === 'dark');\n\n  const [currentPage, setCurrentPage] = useState('login');\n  const [modal, setModal] = useState(null);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [viewedFileContent, setViewedFileContent] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => localStorage.getItem('excelOpeningPreference') || 'ask');\n\n  useEffect(() => {\n    if (isAuthenticated && accounts.length > 0) {\n      const fetchProfile = async () => {\n        try {\n          const response = await instance.acquireTokenSilent({ ...loginRequest, account: accounts[0] });\n          const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', { headers: { Authorization: `Bearer ${response.accessToken}` } });\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n          setCurrentPage('dashboard');\n          fetchSharePointData();\n        } catch (e) {\n          console.error(e);\n          showMessage('Could not fetch user profile.', 'error');\n        }\n      };\n      fetchProfile();\n    } else {\n      setCurrentPage('login');\n    }\n  }, [isAuthenticated, accounts, instance, fetchSharePointData]);\n\n  useEffect(() => {\n    if (error) showMessage(error, 'error');\n  }, [error]);\n\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n  \n  const showMessage = (text, type = 'info') => setMessage({ text, type });\n  const handleMicrosoftLogin = () => instance.loginPopup(loginRequest).catch(e => console.error(e));\n  const handleLogout = () => instance.logoutPopup();\n\n  const handleExcelOpen = useCallback((file) => {\n    if (excelOpeningPreference === 'ask') {\n      setModal('excelChoice');\n    } else if (excelOpeningPreference === 'web') {\n      window.open(file.webUrl, '_blank');\n    } else {\n      window.location.href = `ms-excel:ofe|u|${encodeURIComponent(file.webUrl)}`;\n    }\n  }, [excelOpeningPreference]);\n\n  const handleView = useCallback(async (file) => {\n    setSelectedFile(file);\n    if (file.type === 'xlsx') {\n        handleExcelOpen(file);\n    } else {\n        try {\n            const content = await downloadFileFromSharePoint(file);\n            setViewedFileContent(content);\n            setModal('viewFile');\n        } catch (e) {\n            showMessage(e.message, 'error');\n        }\n    }\n  }, [downloadFileFromSharePoint, handleExcelOpen, showMessage]);\n  \n  const handleApprove = useCallback((fileId) => {\n    const fileToApprove = folders[FOLDER_NAMES.INCOMING_INVOICES].find(f => f.id === fileId);\n    setSelectedFile(fileToApprove);\n    setModal('confirmApproval');\n  }, [folders]);\n\n  const handleSent = useCallback((fileId) => {\n    const fileToSend = folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS].find(f => f.id === fileId);\n    setSelectedFile(fileToSend);\n    setModal('confirmSent');\n  }, [folders]);\n\n  const handleConfirm = async () => {\n    if (!selectedFile || !modal) return;\n    const action = modal;\n    const originalFile = selectedFile;\n    setModal(null);\n    try {\n      let successMessage = '';\n      if (action === 'confirmApproval') {\n        const sourceFolderId = FOLDER_DETAILS.incomingInvoices.id;\n        const destFolderId = FOLDER_DETAILS.approvedInvoices.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File approved successfully.';\n      } else if (action === 'confirmSent') {\n        const sourceFolderId = FOLDER_DETAILS.publishedDocuments.id;\n        const destFolderId = FOLDER_DETAILS.sentDocuments.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File marked as sent.';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n    } catch (e) {\n      showMessage(e.message, 'error');\n    }\n  };\n\n  const renderPage = () => {\n    switch (currentPage) {\n        case 'dashboard':\n            return <DashboardPage userProfile={userProfile} folders={folders} setCurrentPage={setCurrentPage} />;\n        case 'incomingInvoices':\n            return <IncomingInvoicesPage files={folders[FOLDER_NAMES.INCOMING_INVOICES]} setCurrentPage={setCurrentPage} onView={handleView} onApprove={handleApprove} />;\n        case 'approvedInvoices':\n            return <ApprovedInvoicesPage files={folders[FOLDER_NAMES.APPROVED_INVOICES]} setCurrentPage={setCurrentPage} onView={handleView} />;\n        case 'publishedDocuments':\n            return <PublishedDocumentsPage files={folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS]} setCurrentPage={setCurrentPage} onView={handleView} onSent={handleSent} />;\n        case 'sentDocuments':\n            return <SentDocumentsPage files={folders[FOLDER_NAMES.SENT_DOCUMENTS]} setCurrentPage={setCurrentPage} onView={handleView} />;\n        default:\n            return <LoginPage onLogin={handleMicrosoftLogin} />;\n    }\n  };\n\n  const closeModal = () => {\n    setModal(null);\n    setSelectedFile(null);\n    if (viewedFileContent && viewedFileContent.startsWith('blob:')) {\n      URL.revokeObjectURL(viewedFileContent);\n    }\n    setViewedFileContent(null);\n  };\n\n  if (!isAuthenticated) {\n    return <LoginPage onLogin={handleMicrosoftLogin} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\">\n      {isLoading && <LoadingSpinner />}\n      <MessageDisplay message={message} onClearMessage={() => setMessage({ text: '', type: '' })} />\n\n      <Header\n        onLogout={handleLogout}\n        onRefresh={fetchSharePointData}\n        onSettingsClick={() => setModal('settings')}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n      \n      <main className=\"p-4 sm:p-6 md:p-8 max-w-7xl mx-auto w-full\">\n        {renderPage()}\n      </main>\n\n      <ConfirmModal\n        isOpen={modal === 'confirmApproval' || modal === 'confirmSent'}\n        onClose={closeModal}\n        onConfirm={handleConfirm}\n        title={modal === 'confirmApproval' ? \"Confirm Approval\" : \"Confirm Sent\"}\n        message={`Are you sure you want to proceed with this action for \"${selectedFile?.name}\"?`}\n      />\n      <ViewFileModal\n        isOpen={modal === 'viewFile'}\n        onClose={closeModal}\n        file={selectedFile}\n        content={viewedFileContent}\n      />\n      <ExcelChoiceModal\n        isOpen={modal === 'excelChoice'}\n        onClose={closeModal}\n        fileName={selectedFile?.name || ''}\n        onOpenWeb={() => { window.open(selectedFile?.webUrl, '_blank'); closeModal(); }}\n        onOpenDesktop={() => { window.location.href = `ms-excel:ofe|u|${encodeURIComponent(selectedFile?.webUrl)}`; closeModal(); }}\n      />\n      <SettingsModal\n        isOpen={modal === 'settings'}\n        onClose={closeModal}\n        isDarkMode={isDarkMode}\n        toggleDarkMode={() => setIsDarkMode(prev => !prev)}\n        currentExcelPreference={excelOpeningPreference}\n        onPreferenceChange={setExcelOpeningPreference}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}