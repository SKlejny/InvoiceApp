{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useGraph.js\nimport { useState, useCallback } from 'react';\nimport { getAccessToken, fetchFilesFromFolder, moveFile, downloadFileContent } from '../services/sharepointService';\nimport { FOLDER_DETAILS, FOLDER_NAMES } from '../utils/constants';\nconst initialFoldersState = {\n  [FOLDER_NAMES.INCOMING_INVOICES]: [],\n  [FOLDER_NAMES.APPROVED_INVOICES]: [],\n  [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n  [FOLDER_NAMES.SENT_DOCUMENTS]: []\n};\nconst useGraph = (instance, accounts) => {\n  _s();\n  const [folders, setFolders] = useState(initialFoldersState);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const accessToken = await getAccessToken(instance, accounts);\n      const folderPromises = Object.entries(FOLDER_DETAILS).map(async ([key, details]) => {\n        const files = await fetchFilesFromFolder(accessToken, details.id);\n        return {\n          [details.path]: files\n        };\n      });\n      const results = await Promise.all(folderPromises);\n      const allFolders = results.reduce((acc, current) => ({\n        ...acc,\n        ...current\n      }), {});\n      setFolders(allFolders);\n    } catch (e) {\n      console.error(\"Failed to fetch SharePoint data:\", e);\n      setError(\"Could not load files from SharePoint. Please refresh.\");\n    } finally {\n      setIsLoading(false);\n    }\n    // FIX: The dependency array should not include `isLoading`.\n  }, [instance, accounts]);\n  const moveSharePointFile = useCallback(async (fileId, sourceFolderId, destinationFolderId) => {\n    setIsLoading(true);\n    try {\n      const accessToken = await getAccessToken(instance, accounts);\n      await moveFile(accessToken, fileId, destinationFolderId);\n    } catch (e) {\n      console.error(\"Failed to move file:\", e);\n      throw new Error(\"Failed to move the file.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts]);\n  const downloadFileFromSharePoint = useCallback(async file => {\n    setIsLoading(true);\n    try {\n      const accessToken = await getAccessToken(instance, accounts);\n      return await downloadFileContent(accessToken, file);\n    } catch (e) {\n      console.error(\"Failed to download file content:\", e);\n      throw new Error(\"Could not download file content.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts]);\n  return {\n    folders,\n    isLoading,\n    error,\n    fetchSharePointData,\n    moveSharePointFile,\n    downloadFileFromSharePoint\n  };\n};\n_s(useGraph, \"jtEousf3WRP1BM2m4cDXma1bZT8=\");\nexport default useGraph;","map":{"version":3,"names":["useState","useCallback","getAccessToken","fetchFilesFromFolder","moveFile","downloadFileContent","FOLDER_DETAILS","FOLDER_NAMES","initialFoldersState","INCOMING_INVOICES","APPROVED_INVOICES","PUBLISHED_DOCUMENTS","SENT_DOCUMENTS","useGraph","instance","accounts","_s","folders","setFolders","isLoading","setIsLoading","error","setError","fetchSharePointData","accessToken","folderPromises","Object","entries","map","key","details","files","id","path","results","Promise","all","allFolders","reduce","acc","current","e","console","moveSharePointFile","fileId","sourceFolderId","destinationFolderId","Error","downloadFileFromSharePoint","file"],"sources":["/workspaces/InvoiceApp/src/hooks/useGraph.js"],"sourcesContent":["// src/hooks/useGraph.js\nimport { useState, useCallback } from 'react';\nimport { getAccessToken, fetchFilesFromFolder, moveFile, downloadFileContent } from '../services/sharepointService';\nimport { FOLDER_DETAILS, FOLDER_NAMES } from '../utils/constants';\n\nconst initialFoldersState = {\n    [FOLDER_NAMES.INCOMING_INVOICES]: [],\n    [FOLDER_NAMES.APPROVED_INVOICES]: [],\n    [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n    [FOLDER_NAMES.SENT_DOCUMENTS]: [],\n};\n\nconst useGraph = (instance, accounts) => {\n  const [folders, setFolders] = useState(initialFoldersState);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const accessToken = await getAccessToken(instance, accounts);\n      const folderPromises = Object.entries(FOLDER_DETAILS).map(async ([key, details]) => {\n        const files = await fetchFilesFromFolder(accessToken, details.id);\n        return { [details.path]: files };\n      });\n      const results = await Promise.all(folderPromises);\n      const allFolders = results.reduce((acc, current) => ({ ...acc, ...current }), {});\n      setFolders(allFolders);\n    } catch (e) {\n      console.error(\"Failed to fetch SharePoint data:\", e);\n      setError(\"Could not load files from SharePoint. Please refresh.\");\n    } finally {\n      setIsLoading(false);\n    }\n    // FIX: The dependency array should not include `isLoading`.\n  }, [instance, accounts]);\n\n  const moveSharePointFile = useCallback(async (fileId, sourceFolderId, destinationFolderId) => {\n    setIsLoading(true);\n    try {\n      const accessToken = await getAccessToken(instance, accounts);\n      await moveFile(accessToken, fileId, destinationFolderId);\n    } catch (e) {\n      console.error(\"Failed to move file:\", e);\n      throw new Error(\"Failed to move the file.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts]);\n  \n  const downloadFileFromSharePoint = useCallback(async (file) => {\n    setIsLoading(true);\n    try {\n        const accessToken = await getAccessToken(instance, accounts);\n        return await downloadFileContent(accessToken, file);\n    } catch(e) {\n        console.error(\"Failed to download file content:\", e);\n        throw new Error(\"Could not download file content.\");\n    } finally {\n        setIsLoading(false);\n    }\n  }, [instance, accounts]);\n\n  return { folders, isLoading, error, fetchSharePointData, moveSharePointFile, downloadFileFromSharePoint };\n};\n\nexport default useGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}