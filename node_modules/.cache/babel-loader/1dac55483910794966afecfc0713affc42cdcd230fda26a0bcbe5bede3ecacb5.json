{"ast":null,"code":"// src/authConfig.js\n\nexport const msalConfig = {\n  auth: {\n    // Replace with your Azure AD Application (client) ID\n    clientId: \"6b93b79a-c6e2-4bd9-b3fb-dc5c04fcb61c\",\n    // Replace with your Azure AD Tenant ID (directory ID) or \"common\" for multi-tenant apps\n    // For single-tenant apps, it will be the ID of your organization's directory.\n    authority: \"https://login.microsoftonline.com/YOUR_AZURE_AD_TENANT_ID\",\n    // The URI where Azure AD will redirect back to your app after authentication.\n    // This MUST be registered in your Azure AD App Registration settings.\n    // For local development, this is typically \"http://localhost:3000\" (or your dev server port).\n    // For Codespaces, ensure it's the correct URL, e.g., the URL Codespaces gives you.\n    redirectUri: \"YOUR_APP_REDIRECT_URI\" // e.g., \"http://localhost:3000\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your app will store auth tokens.\n    storeAuthStateInCookie: false // Set to true to store auth state in cookies if needed.\n  }\n};\n\n// Scopes required for your application.\n// \"User.Read\" for basic user profile info.\n// \"Sites.ReadWrite.All\" for comprehensive SharePoint access (modify files, lists, etc.).\n// Ensure these are granted and admin-consented in your Azure AD app registration.\nexport const loginRequest = {\n  scopes: [\"User.Read\", \"Sites.ReadWrite.All\"]\n};\n\n// You might define different scopes for different Graph API calls.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n  // You would define other Graph API endpoints here, e.g., for SharePoint:\n  // sharePointApiEndpoint: \"https://graph.microsoft.com/v1.0/sites/{site-id}/drives/{drive-id}/root:/children\"\n};","map":{"version":3,"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","loginRequest","scopes","graphConfig","graphMeEndpoint"],"sources":["/workspaces/InvoiceApp/src/authConfig.js"],"sourcesContent":["// src/authConfig.js\n\nexport const msalConfig = {\n  auth: {\n    // Replace with your Azure AD Application (client) ID\n    clientId: \"6b93b79a-c6e2-4bd9-b3fb-dc5c04fcb61c\", \n    \n    // Replace with your Azure AD Tenant ID (directory ID) or \"common\" for multi-tenant apps\n    // For single-tenant apps, it will be the ID of your organization's directory.\n    authority: \"https://login.microsoftonline.com/YOUR_AZURE_AD_TENANT_ID\", \n    \n    // The URI where Azure AD will redirect back to your app after authentication.\n    // This MUST be registered in your Azure AD App Registration settings.\n    // For local development, this is typically \"http://localhost:3000\" (or your dev server port).\n    // For Codespaces, ensure it's the correct URL, e.g., the URL Codespaces gives you.\n    redirectUri: \"YOUR_APP_REDIRECT_URI\", // e.g., \"http://localhost:3000\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\", // This configures where your app will store auth tokens.\n    storeAuthStateInCookie: false, // Set to true to store auth state in cookies if needed.\n  },\n};\n\n// Scopes required for your application.\n// \"User.Read\" for basic user profile info.\n// \"Sites.ReadWrite.All\" for comprehensive SharePoint access (modify files, lists, etc.).\n// Ensure these are granted and admin-consented in your Azure AD app registration.\nexport const loginRequest = {\n  scopes: [\"User.Read\", \"Sites.ReadWrite.All\"]\n};\n\n// You might define different scopes for different Graph API calls.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n  // You would define other Graph API endpoints here, e.g., for SharePoint:\n  // sharePointApiEndpoint: \"https://graph.microsoft.com/v1.0/sites/{site-id}/drives/{drive-id}/root:/children\"\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,UAAU,GAAG;EACxBC,IAAI,EAAE;IACJ;IACAC,QAAQ,EAAE,sCAAsC;IAEhD;IACA;IACAC,SAAS,EAAE,2DAA2D;IAEtE;IACA;IACA;IACA;IACAC,WAAW,EAAE,uBAAuB,CAAE;EACxC,CAAC;EACDC,KAAK,EAAE;IACLC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE,KAAK,CAAE;EACjC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,CAAC,WAAW,EAAE,qBAAqB;AAC7C,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,eAAe,EAAE;EACjB;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}