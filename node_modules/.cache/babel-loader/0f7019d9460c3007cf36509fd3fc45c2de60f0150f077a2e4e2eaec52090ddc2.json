{"ast":null,"code":"var _jsxFileName = \"/workspaces/InvoiceApp/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\n// Import components\nimport ConfirmModal from './components/ConfirmModal';\nimport EditFileModal from './components/EditFileModal';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport ViewFileModal from './components/ViewFileModal';\nimport MessageDisplay from './components/MessageDisplay';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\n// Import pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n\n// Import services and constants\nimport { fetchSharePointFiles, uploadFileToSharePoint, downloadFileFromSharePoint, updateSharePointFileContent, moveSharePointFile, logAuditTrail, fetchAuditTrails } from './services/sharepointService';\nimport { INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, FOLDER_NAMES, SHAREPOINT_SITE_ID, AUDIT_TRAIL_LIST_ID } from './utils/constants';\nimport { loginRequest } from './authConfig';\nimport { ThemeContext } from './contexts/ThemeContext';\n\n// Icons for App.js header\nimport { Upload, RefreshCw, Settings, ScrollText } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const [userProfile, setUserProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('theme') === 'dark';\n  });\n  const [folders, setFolders] = useState({\n    [FOLDER_NAMES.INCOMING_INVOICES]: [],\n    [FOLDER_NAMES.APPROVED_INVOICES]: [],\n    [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n    [FOLDER_NAMES.SENT_DOCUMENTS]: []\n  });\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [isExcelChoiceModalOpen, setIsExcelChoiceModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n\n  // CRITICAL: Ensure this useState declaration is EXACTLY as follows:\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedFileName, setEditedFileName] = useState('');\n  const [editedFileContent, setEditedFileContent] = useState(''); // <-- Check this line carefully!\n  const [confirmActionDetails, setConfirmActionDetails] = useState(null);\n  const [fileToOpenInExcel, setFileToOpenInExcel] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => {\n    return localStorage.getItem('excelOpeningPreference') || 'ask';\n  });\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const [auditLogs, setAuditLogs] = useState([]);\n\n  // --- Helper Functions and Callbacks ---\n\n  const showMessage = useCallback((text, type) => {\n    setMessage({\n      text,\n      type\n    });\n  }, []);\n  const clearMessage = useCallback(() => {\n    setMessage({\n      text: '',\n      type: ''\n    });\n  }, []);\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n  const fetchUserProfile = useCallback(async () => {\n    if (accounts.length > 0) {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0]\n        });\n        const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n          headers: {\n            'Authorization': `Bearer ${response.accessToken}`\n          }\n        });\n        if (graphResponse.ok) {\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n        } else {\n          console.error(\"Failed to fetch user profile:\", await graphResponse.text());\n        }\n      } catch (error) {\n        console.error(\"Error acquiring token for user profile:\", error);\n        if (error instanceof InteractionRequiredAuthError) {\n          instance.acquireTokenRedirect(loginRequest);\n        }\n      }\n    }\n  }, [accounts, instance]);\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const allFolders = await fetchSharePointFiles(instance, accounts);\n      setFolders(allFolders);\n      showMessage('Files refreshed successfully!', 'success');\n    } catch (error) {\n      console.error(\"Error fetching SharePoint files:\", error);\n      showMessage(`Failed to load files: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  const fetchAuditLogs = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const logs = await fetchAuditTrails(instance, accounts);\n      setAuditLogs(logs);\n    } catch (error) {\n      console.error(\"Error fetching audit logs:\", error);\n      showMessage(`Failed to load audit logs: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserProfile();\n      fetchSharePointData();\n    }\n  }, [isAuthenticated, fetchUserProfile, fetchSharePointData]);\n\n  // --- MSAL Auth Handlers ---\n\n  const handleMicrosoftLogin = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await instance.loginPopup(loginRequest);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      showMessage(`Login failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, showMessage]);\n  const handleLogout = useCallback(() => {\n    instance.logoutPopup();\n    setUserProfile(null);\n    setFolders({\n      [FOLDER_NAMES.INCOMING_INVOICES]: [],\n      [FOLDER_NAMES.APPROVED_INVOICES]: [],\n      [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n      [FOLDER_NAMES.SENT_DOCUMENTS]: []\n    });\n    setCurrentPage('login');\n  }, [instance]);\n\n  // --- File Operations Handlers ---\n\n  const handleRefresh = useCallback(() => {\n    fetchSharePointData();\n  }, [fetchSharePointData]);\n  const handleUploadFile = useCallback(async (file, folderId) => {\n    setIsLoading(true);\n    try {\n      await uploadFileToSharePoint(file, folderId, instance, accounts);\n      showMessage('File uploaded successfully!', 'success');\n      fetchSharePointData();\n      logAuditTrail({\n        actionType: 'File Uploaded',\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: file.name,\n        fileId: 'N/A',\n        newLocation: folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Unknown Folder',\n        details: `Uploaded to ${folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Other Folder'}`\n      }, instance, accounts);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      showMessage(`File upload failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage, fetchSharePointData, userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleDownloadAndSetContent = useCallback(async file => {\n    setIsLoading(true);\n    try {\n      const content = await downloadFileFromSharePoint(file, instance, accounts);\n      setEditedFileContent(content);\n      return content;\n    } catch (error) {\n      console.error('Download failed:', error);\n      showMessage(`Failed to get file content: ${error.message}`, 'error');\n      setEditedFileContent('');\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n  const handleEditClick = useCallback(async file => {\n    setSelectedFile(file);\n    setEditedFileName(file.name);\n    setIsEditModalOpen(true);\n    if (file.type !== 'xlsx') {\n      await handleDownloadAndSetContent(file);\n    } else {\n      setEditedFileContent('');\n    }\n  }, [handleDownloadAndSetContent]);\n  const openInExcelDesktop = useCallback(file => {\n    if (file && file.webUrl) {\n      const encodedUrl = encodeURIComponent(file.webUrl);\n      window.location.href = `ms-excel:ofe|u|${encodedUrl}`;\n      showMessage(`Attempting to open \"${file.name}\" in Excel desktop app.`, 'info');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n  const openInExcelWeb = useCallback(file => {\n    if (file && file.webUrl) {\n      window.open(file.webUrl, '_blank');\n      showMessage(`Opened \"${file.name}\" in Excel Online.`, 'success');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n  const handleSaveEdit = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsConfirmModalOpen(false);\n    if (selectedFile.type === 'xlsx') {\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(selectedFile);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(selectedFile);\n      } else {\n        setFileToOpenInExcel(selectedFile);\n        setIsExcelChoiceModalOpen(true);\n      }\n      logAuditTrail({\n        actionType: `File Opened - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: selectedFile.name,\n        fileId: selectedFile.id,\n        details: `Opened for edit (Excel file)`\n      }, instance, accounts);\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n      return;\n    }\n    setIsLoading(true);\n    try {\n      await updateSharePointFileContent(selectedFile.id, editedFileName, editedFileContent, instance, accounts);\n      showMessage('File updated successfully!', 'success');\n      logAuditTrail({\n        actionType: 'File Edited',\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: editedFileName,\n        fileId: selectedFile.id,\n        details: `Content and/or name updated. Original name: ${selectedFile.name}`\n      }, instance, accounts);\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n    } catch (error) {\n      console.error('Save edit failed:', error);\n      showMessage(`Save failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile, editedFileName, editedFileContent, instance, accounts, fetchSharePointData, excelOpeningPreference, openInExcelWeb, openInExcelDesktop, userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName]);\n  const handleView = useCallback(async file => {\n    setSelectedFile(file);\n    setIsViewModalOpen(true);\n    if (file.type === 'xlsx' && file.webUrl) {\n      // Diagnostic console logs for setEditedFileContent\n      console.log('handleView: Inside XLSX block');\n      console.log('handleView: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleView: setEditedFileContent =', setEditedFileContent);\n      setEditedFileContent(''); // <-- Error line\n\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(file);\n        setIsViewModalOpen(false);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(file);\n        setIsViewModalOpen(false);\n      } else {\n        setFileToOpenInExcel(file);\n        setIsExcelChoiceModalOpen(true);\n        setIsViewModalOpen(false);\n      }\n      logAuditTrail({\n        actionType: `File Viewed - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: file.name,\n        fileId: file.id,\n        details: `Viewed (Excel file)`\n      }, instance, accounts);\n    } else {\n      await handleDownloadAndSetContent(file);\n      logAuditTrail({\n        actionType: 'File Viewed',\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: file.name,\n        fileId: file.id,\n        details: `Viewed (PDF/Text/Image file)`\n      }, instance, accounts);\n    }\n  }, [handleDownloadAndSetContent, showMessage, excelOpeningPreference, openInExcelWeb, openInExcelDesktop, userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName, setEditedFileContent]); // Added setEditedFileContent to deps for safety\n\n  const handleApprove = useCallback(fileId => {\n    setConfirmActionDetails({\n      type: 'approve',\n      fileId: fileId,\n      message: 'Are you sure you want to approve this invoice and move it to Approved Invoices?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n  const handleSent = useCallback(fileId => {\n    setConfirmActionDetails({\n      type: 'sent',\n      fileId: fileId,\n      message: 'Are you sure you want to mark this document as sent and move it to Sent Documents?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n  const handleConfirmAction = useCallback(async () => {\n    if (!confirmActionDetails) return;\n    setIsConfirmModalOpen(false);\n    setIsLoading(true);\n    const {\n      type,\n      fileId\n    } = confirmActionDetails;\n    let successMessage = '';\n    let errorMessage = '';\n    let actionType = '';\n    let oldLoc = '';\n    let newLoc = '';\n    const fileAffected = folders[currentPage].find(f => f.id === fileId);\n    try {\n      if (type === 'approve') {\n        actionType = 'Invoice Approved';\n        oldLoc = FOLDER_NAMES.INCOMING_INVOICES;\n        newLoc = FOLDER_NAMES.APPROVED_INVOICES;\n        await moveSharePointFile(fileId, INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Invoice approved and moved successfully!';\n      } else if (type === 'sent') {\n        actionType = 'Document Marked Sent';\n        oldLoc = FOLDER_NAMES.PUBLISHED_DOCUMENTS;\n        newLoc = FOLDER_NAMES.SENT_DOCUMENTS;\n        await moveSharePointFile(fileId, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Document marked as sent and moved successfully!';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n      logAuditTrail({\n        actionType: actionType,\n        userName: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName) || 'Unknown User',\n        fileName: (fileAffected === null || fileAffected === void 0 ? void 0 : fileAffected.name) || 'N/A',\n        fileId: fileId,\n        oldLocation: oldLoc,\n        newLocation: newLoc,\n        details: `Moved from ${oldLoc} to ${newLoc}`\n      }, instance, accounts);\n    } catch (error) {\n      console.error(`Action \"${type}\" failed:`, error);\n      errorMessage = `Action failed: ${error.message}`;\n      showMessage(errorMessage, 'error');\n    } finally {\n      setIsLoading(false);\n      setConfirmActionDetails(null);\n    }\n  }, [confirmActionDetails, instance, accounts, showMessage, fetchSharePointData, files, currentPage, folders, userProfile === null || userProfile === void 0 ? void 0 : userProfile.displayName]);\n  const handleOpenSettings = useCallback(() => {\n    setIsSettingsModalOpen(true);\n  }, []);\n  const handleCloseSettings = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n  const handleSetExcelOpeningPreference = useCallback(preference => {\n    setExcelOpeningPreference(preference);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative min-h-screen flex flex-col\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n        message: message,\n        onClearMessage: clearMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExcelChoiceModal, {\n        isOpen: isExcelChoiceModalOpen,\n        onClose: () => setIsExcelChoiceModalOpen(false),\n        fileName: (fileToOpenInExcel === null || fileToOpenInExcel === void 0 ? void 0 : fileToOpenInExcel.name) || '',\n        onOpenWeb: () => openInExcelWeb(fileToOpenInExcel),\n        onOpenDesktop: () => openInExcelDesktop(fileToOpenInExcel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n        isOpen: isSettingsModalOpen,\n        onClose: handleCloseSettings,\n        currentExcelPreference: excelOpeningPreference,\n        onPreferenceChange: preference => setExcelOpeningPreference(preference),\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow\",\n        children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleMicrosoftLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"flex justify-between items-center p-4 bg-light-bg-card shadow-md  dark:bg-dark-bg-card dark:text-text-primary-dark dark:border-b dark:border-border-subtle-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-text-primary-light dark:text-text-primary-dark\",\n              children: \"Invoice System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"fileUploadInput\",\n                style: {\n                  display: 'none'\n                },\n                onChange: e => {\n                  if (e.target.files && e.target.files[0]) {\n                    handleUploadFile(e.target.files[0], INCOMING_INVOICES_FOLDER_ITEM_ID);\n                    e.target.value = '';\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => document.getElementById('fileUploadInput').click(),\n                className: \"px-4 py-2 bg-brand-orange-light text-white rounded-lg shadow-md  hover:bg-brand-orange-dark transition duration-200 flex items-center\",\n                \"aria-label\": \"Upload new file\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 18,\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 21\n                }, this), \" Upload File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefresh,\n                className: \"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md  hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center  dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\",\n                \"aria-label\": \"Refresh file list\",\n                children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                  size: 18,\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this), \" Refresh Files\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleOpenSettings,\n                className: \"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md  hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center  dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\",\n                \"aria-label\": \"Open settings\",\n                children: /*#__PURE__*/_jsxDEV(Settings, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), currentPage === 'dashboard' && /*#__PURE__*/_jsxDEV(DashboardPage, {\n            userProfile: userProfile,\n            folders: folders,\n            setCurrentPage: setCurrentPage,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), currentPage === 'incomingInvoices' && /*#__PURE__*/_jsxDEV(IncomingInvoicesPage, {\n            files: folders[FOLDER_NAMES.INCOMING_INVOICES],\n            setCurrentPage: setCurrentPage,\n            onEdit: handleEditClick,\n            onApprove: handleApprove,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 17\n          }, this), currentPage === 'publishedDocuments' && /*#__PURE__*/_jsxDEV(PublishedDocumentsPage, {\n            files: folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS],\n            setCurrentPage: setCurrentPage,\n            onView: handleView,\n            onSent: handleSent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this), currentPage === 'approvedInvoices' && /*#__PURE__*/_jsxDEV(ApprovedInvoicesPage, {\n            files: folders[FOLDER_NAMES.APPROVED_INVOICES],\n            setCurrentPage: setCurrentPage,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 17\n          }, this), currentPage === 'sentDocuments' && /*#__PURE__*/_jsxDEV(SentDocumentsPage, {\n            files: folders[FOLDER_NAMES.SENT_DOCUMENTS],\n            setCurrentPage: setCurrentPage,\n            onView: handleView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditFileModal, {\n        isOpen: isEditModalOpen,\n        onClose: () => {\n          setIsEditModalOpen(false);\n          if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n            URL.revokeObjectURL(editedFileContent);\n          }\n          setSelectedFile(null);\n          setEditedFileName('');\n          setEditedFileContent('');\n        },\n        fileName: editedFileName,\n        onFileNameChange: e => setEditedFileName(e.target.value),\n        fileContent: editedFileContent,\n        onFileContentChange: e => setEditedFileContent(e.target.value),\n        onSave: handleSaveEdit,\n        selectedFileType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type,\n        selectedFileMimeType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.mimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewFileModal, {\n        isOpen: isViewModalOpen,\n        onClose: () => {\n          setIsViewModalOpen(false);\n          if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n            URL.revokeObjectURL(editedFileContent);\n          }\n          setSelectedFile(null);\n          setEditedFileContent('');\n        },\n        fileName: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || '',\n        fileContent: editedFileContent,\n        selectedFileType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type,\n        selectedFileMimeType: selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.mimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n        isOpen: isConfirmModalOpen,\n        onClose: () => setIsConfirmModalOpen(false),\n        onConfirm: handleConfirmAction,\n        message: (confirmActionDetails === null || confirmActionDetails === void 0 ? void 0 : confirmActionDetails.message) || \"Are you sure you want to proceed?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p22UKH16IaDCdHdu8YmSxAwMJ98=\", false, function () {\n  return [useMsal, useIsAuthenticated];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMsal","useIsAuthenticated","InteractionRequiredAuthError","ConfirmModal","EditFileModal","LoadingSpinner","ViewFileModal","MessageDisplay","ExcelChoiceModal","SettingsModal","LoginPage","DashboardPage","IncomingInvoicesPage","PublishedDocumentsPage","ApprovedInvoicesPage","SentDocumentsPage","fetchSharePointFiles","uploadFileToSharePoint","downloadFileFromSharePoint","updateSharePointFileContent","moveSharePointFile","logAuditTrail","fetchAuditTrails","INCOMING_INVOICES_FOLDER_ITEM_ID","APPROVED_INVOICES_FOLDER_ITEM_ID","PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID","SENT_FOLDER_ITEM_ID","FOLDER_NAMES","SHAREPOINT_SITE_ID","AUDIT_TRAIL_LIST_ID","loginRequest","ThemeContext","Upload","RefreshCw","Settings","ScrollText","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","instance","accounts","isAuthenticated","userProfile","setUserProfile","isLoading","setIsLoading","message","setMessage","text","type","isDarkMode","setIsDarkMode","localStorage","getItem","folders","setFolders","INCOMING_INVOICES","APPROVED_INVOICES","PUBLISHED_DOCUMENTS","SENT_DOCUMENTS","isEditModalOpen","setIsEditModalOpen","isViewModalOpen","setIsViewModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","isExcelChoiceModalOpen","setIsExcelChoiceModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","selectedFile","setSelectedFile","editedFileName","setEditedFileName","editedFileContent","setEditedFileContent","confirmActionDetails","setConfirmActionDetails","fileToOpenInExcel","setFileToOpenInExcel","excelOpeningPreference","setExcelOpeningPreference","currentPage","setCurrentPage","auditLogs","setAuditLogs","showMessage","clearMessage","toggleDarkMode","prevMode","newMode","setItem","document","documentElement","classList","add","remove","fetchUserProfile","length","response","acquireTokenSilent","account","graphResponse","fetch","headers","accessToken","ok","profile","json","console","error","acquireTokenRedirect","fetchSharePointData","allFolders","fetchAuditLogs","logs","handleMicrosoftLogin","loginPopup","handleLogout","logoutPopup","handleRefresh","handleUploadFile","file","folderId","actionType","userName","displayName","fileName","name","fileId","newLocation","details","handleDownloadAndSetContent","content","handleEditClick","openInExcelDesktop","webUrl","encodedUrl","encodeURIComponent","window","location","href","openInExcelWeb","open","handleSaveEdit","id","handleView","log","handleApprove","handleSent","handleConfirmAction","successMessage","errorMessage","oldLoc","newLoc","fileAffected","find","f","oldLocation","files","handleOpenSettings","handleCloseSettings","handleSetExcelOpeningPreference","preference","Provider","value","children","className","_jsxFileName","lineNumber","columnNumber","onClearMessage","isOpen","onClose","onOpenWeb","onOpenDesktop","currentExcelPreference","onPreferenceChange","onLogin","style","display","onChange","e","target","onClick","getElementById","click","size","onLogout","onEdit","onApprove","onView","onSent","startsWith","URL","revokeObjectURL","onFileNameChange","fileContent","onFileContentChange","onSave","selectedFileType","selectedFileMimeType","mimeType","onConfirm","_c","$RefreshReg$"],"sources":["/workspaces/InvoiceApp/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\n// Import components\nimport ConfirmModal from './components/ConfirmModal';\nimport EditFileModal from './components/EditFileModal';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport ViewFileModal from './components/ViewFileModal';\nimport MessageDisplay from './components/MessageDisplay';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\n// Import pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport IncomingInvoicesPage from './pages/IncomingInvoicePage';\nimport PublishedDocumentsPage from './pages/PublishedDocumentsPage';\nimport ApprovedInvoicesPage from './pages/ApprovedInvoicesPage';\nimport SentDocumentsPage from './pages/SentDocumentsPage';\n\n// Import services and constants\nimport {\n  fetchSharePointFiles,\n  uploadFileToSharePoint,\n  downloadFileFromSharePoint,\n  updateSharePointFileContent,\n  moveSharePointFile,\n  logAuditTrail,\n  fetchAuditTrails\n} from './services/sharepointService';\nimport {\n  INCOMING_INVOICES_FOLDER_ITEM_ID,\n  APPROVED_INVOICES_FOLDER_ITEM_ID,\n  PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID,\n  SENT_FOLDER_ITEM_ID,\n  FOLDER_NAMES,\n  SHAREPOINT_SITE_ID,\n  AUDIT_TRAIL_LIST_ID\n} from './utils/constants';\nimport { loginRequest } from './authConfig';\nimport { ThemeContext } from './contexts/ThemeContext';\n\n// Icons for App.js header\nimport { Upload, RefreshCw, Settings, ScrollText } from 'lucide-react';\n\n\nfunction App() {\n  const { instance, accounts } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    return localStorage.getItem('theme') === 'dark';\n  });\n\n  const [folders, setFolders] = useState({\n    [FOLDER_NAMES.INCOMING_INVOICES]: [],\n    [FOLDER_NAMES.APPROVED_INVOICES]: [],\n    [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n    [FOLDER_NAMES.SENT_DOCUMENTS]: [],\n  });\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [isExcelChoiceModalOpen, setIsExcelChoiceModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n\n  // CRITICAL: Ensure this useState declaration is EXACTLY as follows:\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedFileName, setEditedFileName] = useState('');\n  const [editedFileContent, setEditedFileContent] = useState(''); // <-- Check this line carefully!\n  const [confirmActionDetails, setConfirmActionDetails] = useState(null);\n  const [fileToOpenInExcel, setFileToOpenInExcel] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => {\n    return localStorage.getItem('excelOpeningPreference') || 'ask';\n  });\n\n\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const [auditLogs, setAuditLogs] = useState([]);\n\n\n  // --- Helper Functions and Callbacks ---\n\n  const showMessage = useCallback((text, type) => {\n    setMessage({ text, type });\n  }, []);\n\n  const clearMessage = useCallback(() => {\n    setMessage({ text: '', type: '' });\n  }, []);\n\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n\n  const fetchUserProfile = useCallback(async () => {\n    if (accounts.length > 0) {\n      try {\n        const response = await instance.acquireTokenSilent({\n          ...loginRequest,\n          account: accounts[0]\n        });\n        const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n          headers: {\n            'Authorization': `Bearer ${response.accessToken}`\n          }\n        });\n        if (graphResponse.ok) {\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n        } else {\n          console.error(\"Failed to fetch user profile:\", await graphResponse.text());\n        }\n      } catch (error) {\n        console.error(\"Error acquiring token for user profile:\", error);\n        if (error instanceof InteractionRequiredAuthError) {\n          instance.acquireTokenRedirect(loginRequest);\n        }\n      }\n    }\n  }, [accounts, instance]);\n\n\n  const fetchSharePointData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const allFolders = await fetchSharePointFiles(instance, accounts);\n      setFolders(allFolders);\n      showMessage('Files refreshed successfully!', 'success');\n    } catch (error) {\n      console.error(\"Error fetching SharePoint files:\", error);\n      showMessage(`Failed to load files: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n  const fetchAuditLogs = useCallback(async () => {\n    setIsLoading(true);\n    try {\n        const logs = await fetchAuditTrails(instance, accounts);\n        setAuditLogs(logs);\n    } catch (error) {\n        console.error(\"Error fetching audit logs:\", error);\n        showMessage(`Failed to load audit logs: ${error.message}`, 'error');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserProfile();\n      fetchSharePointData();\n    }\n  }, [isAuthenticated, fetchUserProfile, fetchSharePointData]);\n\n\n  // --- MSAL Auth Handlers ---\n\n  const handleMicrosoftLogin = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await instance.loginPopup(loginRequest);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      showMessage(`Login failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, showMessage]);\n\n  const handleLogout = useCallback(() => {\n    instance.logoutPopup();\n    setUserProfile(null);\n    setFolders({\n      [FOLDER_NAMES.INCOMING_INVOICES]: [],\n      [FOLDER_NAMES.APPROVED_INVOICES]: [],\n      [FOLDER_NAMES.PUBLISHED_DOCUMENTS]: [],\n      [FOLDER_NAMES.SENT_DOCUMENTS]: [],\n    });\n    setCurrentPage('login');\n  }, [instance]);\n\n\n  // --- File Operations Handlers ---\n\n  const handleRefresh = useCallback(() => {\n    fetchSharePointData();\n  }, [fetchSharePointData]);\n\n\n  const handleUploadFile = useCallback(async (file, folderId) => {\n    setIsLoading(true);\n    try {\n      await uploadFileToSharePoint(file, folderId, instance, accounts);\n      showMessage('File uploaded successfully!', 'success');\n      fetchSharePointData();\n      logAuditTrail({\n          actionType: 'File Uploaded',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: 'N/A',\n          newLocation: folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Unknown Folder',\n          details: `Uploaded to ${folderId === INCOMING_INVOICES_FOLDER_ITEM_ID ? FOLDER_NAMES.INCOMING_INVOICES : 'Other Folder'}`\n      }, instance, accounts);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      showMessage(`File upload failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage, fetchSharePointData, userProfile?.displayName]);\n\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleDownloadAndSetContent = useCallback(async (file) => {\n    setIsLoading(true);\n    try {\n      const content = await downloadFileFromSharePoint(file, instance, accounts);\n      setEditedFileContent(content);\n      return content;\n    } catch (error) {\n      console.error('Download failed:', error);\n      showMessage(`Failed to get file content: ${error.message}`, 'error');\n      setEditedFileContent('');\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [instance, accounts, showMessage]);\n\n\n  const handleEditClick = useCallback(async (file) => {\n    setSelectedFile(file);\n    setEditedFileName(file.name);\n    setIsEditModalOpen(true);\n    if (file.type !== 'xlsx') {\n      await handleDownloadAndSetContent(file);\n    } else {\n      setEditedFileContent('');\n    }\n  }, [handleDownloadAndSetContent]);\n\n\n  const openInExcelDesktop = useCallback((file) => {\n    if (file && file.webUrl) {\n      const encodedUrl = encodeURIComponent(file.webUrl);\n      window.location.href = `ms-excel:ofe|u|${encodedUrl}`;\n      showMessage(`Attempting to open \"${file.name}\" in Excel desktop app.`, 'info');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n\n  const openInExcelWeb = useCallback((file) => {\n    if (file && file.webUrl) {\n      window.open(file.webUrl, '_blank');\n      showMessage(`Opened \"${file.name}\" in Excel Online.`, 'success');\n    }\n    setIsExcelChoiceModalOpen(false);\n    setFileToOpenInExcel(null);\n  }, [showMessage]);\n\n\n  const handleSaveEdit = useCallback(async () => {\n    if (!selectedFile) return;\n\n    setIsConfirmModalOpen(false);\n\n    if (selectedFile.type === 'xlsx') {\n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(selectedFile);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(selectedFile);\n      } else {\n        setFileToOpenInExcel(selectedFile);\n        setIsExcelChoiceModalOpen(true);\n      }\n      logAuditTrail({\n          actionType: `File Opened - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: selectedFile.name,\n          fileId: selectedFile.id,\n          details: `Opened for edit (Excel file)`\n      }, instance, accounts);\n\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await updateSharePointFileContent(selectedFile.id, editedFileName, editedFileContent, instance, accounts);\n      showMessage('File updated successfully!', 'success');\n      logAuditTrail({\n          actionType: 'File Edited',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: editedFileName,\n          fileId: selectedFile.id,\n          details: `Content and/or name updated. Original name: ${selectedFile.name}`\n      }, instance, accounts);\n\n      setIsEditModalOpen(false);\n      setSelectedFile(null);\n      setEditedFileName('');\n      setEditedFileContent('');\n      fetchSharePointData();\n    } catch (error) {\n      console.error('Save edit failed:', error);\n      showMessage(`Save failed: ${error.message}`, 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile, editedFileName, editedFileContent, instance, accounts, fetchSharePointData, excelOpeningPreference, openInExcelWeb, openInExcelDesktop, userProfile?.displayName]);\n\n\n  const handleView = useCallback(async (file) => {\n    setSelectedFile(file);\n    setIsViewModalOpen(true);\n\n    if (file.type === 'xlsx' && file.webUrl) {\n      // Diagnostic console logs for setEditedFileContent\n      console.log('handleView: Inside XLSX block');\n      console.log('handleView: typeof setEditedFileContent =', typeof setEditedFileContent);\n      console.log('handleView: setEditedFileContent =', setEditedFileContent);\n\n      setEditedFileContent(''); // <-- Error line\n      \n      if (excelOpeningPreference === 'web') {\n        openInExcelWeb(file);\n        setIsViewModalOpen(false);\n      } else if (excelOpeningPreference === 'desktop') {\n        openInExcelDesktop(file);\n        setIsViewModalOpen(false);\n      } else {\n        setFileToOpenInExcel(file);\n        setIsExcelChoiceModalOpen(true);\n        setIsViewModalOpen(false);\n      }\n      logAuditTrail({\n          actionType: `File Viewed - ${excelOpeningPreference === 'web' ? 'Web' : 'Desktop App'}`,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (Excel file)`\n      }, instance, accounts);\n    } else {\n      await handleDownloadAndSetContent(file);\n      logAuditTrail({\n          actionType: 'File Viewed',\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: file.name,\n          fileId: file.id,\n          details: `Viewed (PDF/Text/Image file)`\n      }, instance, accounts);\n    }\n  }, [handleDownloadAndSetContent, showMessage, excelOpeningPreference, openInExcelWeb, openInExcelDesktop, userProfile?.displayName, setEditedFileContent]); // Added setEditedFileContent to deps for safety\n\n\n  const handleApprove = useCallback((fileId) => {\n    setConfirmActionDetails({\n      type: 'approve',\n      fileId: fileId,\n      message: 'Are you sure you want to approve this invoice and move it to Approved Invoices?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n\n  const handleSent = useCallback((fileId) => {\n    setConfirmActionDetails({\n      type: 'sent',\n      fileId: fileId,\n      message: 'Are you sure you want to mark this document as sent and move it to Sent Documents?'\n    });\n    setIsConfirmModalOpen(true);\n  }, []);\n\n\n  const handleConfirmAction = useCallback(async () => {\n    if (!confirmActionDetails) return;\n\n    setIsConfirmModalOpen(false);\n    setIsLoading(true);\n\n    const { type, fileId } = confirmActionDetails;\n    let successMessage = '';\n    let errorMessage = '';\n    let actionType = '';\n    let oldLoc = '';\n    let newLoc = '';\n    const fileAffected = folders[currentPage].find(f => f.id === fileId);\n\n    try {\n      if (type === 'approve') {\n        actionType = 'Invoice Approved';\n        oldLoc = FOLDER_NAMES.INCOMING_INVOICES;\n        newLoc = FOLDER_NAMES.APPROVED_INVOICES;\n        await moveSharePointFile(fileId, INCOMING_INVOICES_FOLDER_ITEM_ID, APPROVED_INVOICES_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Invoice approved and moved successfully!';\n      } else if (type === 'sent') {\n        actionType = 'Document Marked Sent';\n        oldLoc = FOLDER_NAMES.PUBLISHED_DOCUMENTS;\n        newLoc = FOLDER_NAMES.SENT_DOCUMENTS;\n        await moveSharePointFile(fileId, PUBLISHED_DOCUMENTS_FOLDER_ITEM_ID, SENT_FOLDER_ITEM_ID, instance, accounts);\n        successMessage = 'Document marked as sent and moved successfully!';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n      logAuditTrail({\n          actionType: actionType,\n          userName: userProfile?.displayName || 'Unknown User',\n          fileName: fileAffected?.name || 'N/A',\n          fileId: fileId,\n          oldLocation: oldLoc,\n          newLocation: newLoc,\n          details: `Moved from ${oldLoc} to ${newLoc}`\n      }, instance, accounts);\n\n    } catch (error) {\n      console.error(`Action \"${type}\" failed:`, error);\n      errorMessage = `Action failed: ${error.message}`;\n      showMessage(errorMessage, 'error');\n    } finally {\n      setIsLoading(false);\n      setConfirmActionDetails(null);\n    }\n  }, [confirmActionDetails, instance, accounts, showMessage, fetchSharePointData, files, currentPage, folders, userProfile?.displayName]);\n\n\n  const handleOpenSettings = useCallback(() => {\n    setIsSettingsModalOpen(true);\n  }, []);\n\n  const handleCloseSettings = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n\n  const handleSetExcelOpeningPreference = useCallback((preference) => {\n    setExcelOpeningPreference(preference);\n  }, []);\n\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\n      <div className=\"relative min-h-screen flex flex-col\">\n        {isLoading && <LoadingSpinner />}\n\n        <MessageDisplay message={message} onClearMessage={clearMessage} />\n\n        <ExcelChoiceModal\n          isOpen={isExcelChoiceModalOpen}\n          onClose={() => setIsExcelChoiceModalOpen(false)}\n          fileName={fileToOpenInExcel?.name || ''}\n          onOpenWeb={() => openInExcelWeb(fileToOpenInExcel)}\n          onOpenDesktop={() => openInExcelDesktop(fileToOpenInExcel)}\n        />\n\n        <SettingsModal\n          isOpen={isSettingsModalOpen}\n          onClose={handleCloseSettings}\n          currentExcelPreference={excelOpeningPreference}\n          onPreferenceChange={(preference) => setExcelOpeningPreference(preference)}\n          isDarkMode={isDarkMode}\n          toggleDarkMode={toggleDarkMode}\n        />\n\n        <main className=\"flex-grow\">\n          {!isAuthenticated ? (\n            <LoginPage onLogin={handleMicrosoftLogin} />\n          ) : (\n            <>\n              <header className=\"flex justify-between items-center p-4 bg-light-bg-card shadow-md \n                                 dark:bg-dark-bg-card dark:text-text-primary-dark dark:border-b dark:border-border-subtle-dark\">\n                <h1 className=\"text-2xl font-bold text-text-primary-light dark:text-text-primary-dark\">Invoice System</h1>\n                \n                <div className=\"flex space-x-4\">\n                  <input\n                    type=\"file\"\n                    id=\"fileUploadInput\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => {\n                      if (e.target.files && e.target.files[0]) {\n                        handleUploadFile(e.target.files[0], INCOMING_INVOICES_FOLDER_ITEM_ID);\n                        e.target.value = '';\n                      }\n                    }}\n                  />\n                  <button\n                    onClick={() => document.getElementById('fileUploadInput').click()}\n                    className=\"px-4 py-2 bg-brand-orange-light text-white rounded-lg shadow-md \n                               hover:bg-brand-orange-dark transition duration-200 flex items-center\"\n                    aria-label=\"Upload new file\"\n                  >\n                    <Upload size={18} className=\"mr-2\" /> Upload File\n                  </button>\n\n                  <button\n                    onClick={handleRefresh}\n                    className=\"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md \n                               hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center \n                               dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\"\n                    aria-label=\"Refresh file list\"\n                  >\n                    <RefreshCw size={18} className=\"mr-2\" /> Refresh Files\n                  </button>\n\n                  <button\n                    onClick={handleOpenSettings}\n                    className=\"px-4 py-2 bg-ui-blue-light/10 text-ui-blue-light rounded-lg shadow-md \n                               hover:bg-ui-blue-light/20 transition-colors duration-300 flex items-center \n                               dark:bg-ui-blue-dark/10 dark:text-ui-blue-dark dark:hover:bg-ui-blue-dark/20\"\n                    aria-label=\"Open settings\"\n                  >\n                    <Settings size={18} />\n                  </button>\n                </div>\n              </header>\n\n              {currentPage === 'dashboard' && (\n                <DashboardPage\n                  userProfile={userProfile}\n                  folders={folders}\n                  setCurrentPage={setCurrentPage}\n                  onLogout={handleLogout}\n                />\n              )}\n              {currentPage === 'incomingInvoices' && (\n                <IncomingInvoicesPage\n                  files={folders[FOLDER_NAMES.INCOMING_INVOICES]}\n                  setCurrentPage={setCurrentPage}\n                  onEdit={handleEditClick}\n                  onApprove={handleApprove}\n                  onView={handleView}\n                />\n              )}\n              {currentPage === 'publishedDocuments' && (\n                <PublishedDocumentsPage\n                  files={folders[FOLDER_NAMES.PUBLISHED_DOCUMENTS]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                  onSent={handleSent}\n                />\n              )}\n              {currentPage === 'approvedInvoices' && (\n                <ApprovedInvoicesPage\n                  files={folders[FOLDER_NAMES.APPROVED_INVOICES]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                />\n              )}\n              {currentPage === 'sentDocuments' && (\n                <SentDocumentsPage\n                  files={folders[FOLDER_NAMES.SENT_DOCUMENTS]}\n                  setCurrentPage={setCurrentPage}\n                  onView={handleView}\n                />\n              )}\n            </>\n          )}\n        </main>\n\n        <EditFileModal\n          isOpen={isEditModalOpen}\n          onClose={() => {\n            setIsEditModalOpen(false);\n            if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n                URL.revokeObjectURL(editedFileContent);\n            }\n            setSelectedFile(null);\n            setEditedFileName('');\n            setEditedFileContent('');\n          }}\n          fileName={editedFileName}\n          onFileNameChange={(e) => setEditedFileName(e.target.value)}\n          fileContent={editedFileContent}\n          onFileContentChange={(e) => setEditedFileContent(e.target.value)}\n          onSave={handleSaveEdit}\n          selectedFileType={selectedFile?.type}\n          selectedFileMimeType={selectedFile?.mimeType}\n        />\n        <ViewFileModal\n          isOpen={isViewModalOpen}\n          onClose={() => {\n            setIsViewModalOpen(false);\n            if (selectedFile && (selectedFile.type === 'pdf' || selectedFile.type === 'image' || selectedFile.type === 'other') && editedFileContent && typeof editedFileContent === 'string' && editedFileContent.startsWith('blob:')) {\n                URL.revokeObjectURL(editedFileContent);\n            }\n            setSelectedFile(null);\n            setEditedFileContent('');\n          }}\n          fileName={selectedFile?.name || ''}\n          fileContent={editedFileContent}\n          selectedFileType={selectedFile?.type}\n          selectedFileMimeType={selectedFile?.mimeType}\n        />\n\n        <ConfirmModal\n          isOpen={isConfirmModalOpen}\n          onClose={() => setIsConfirmModalOpen(false)}\n          onConfirm={handleConfirmAction}\n          message={confirmActionDetails?.message || \"Are you sure you want to proceed?\"}\n        />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}