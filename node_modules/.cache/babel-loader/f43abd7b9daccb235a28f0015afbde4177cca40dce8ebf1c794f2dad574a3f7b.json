{"ast":null,"code":"var _jsxFileName = \"/workspaces/InvoiceApp/src/index.js\";\n// index.js (Your original index.js, which is now correct with the updated authConfig.js)\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css'; // Assuming this is at src/index.css\n\n// Import MSAL.js libraries\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\nimport { MsalProvider } from '@azure/msal-react';\n\n// Import your MSAL configuration\nimport { msalConfig } from './authConfig'; // This will now correctly import msalConfig from src/authConfig.js\n\n// Initialize the PublicClientApplication instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n// Optional: Add a callback for account changes to handle token acquisition silently\nmsalInstance.addEventCallback(event => {\n  if (event.eventType === EventType.ACCOUNT_ADDED || event.eventType === EventType.ACCOUNT_REMOVED) {\n    if (event.payload.account) {\n      msalInstance.setActiveAccount(event.payload.account);\n    }\n  }\n});\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(MsalProvider, {\n        instance: msalInstance,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this));\n  } else {\n    console.error(\"Root element not found to render the React app.\");\n  }\n});","map":{"version":3,"names":["React","createRoot","App","PublicClientApplication","EventType","MsalProvider","msalConfig","jsxDEV","_jsxDEV","msalInstance","addEventCallback","event","eventType","ACCOUNT_ADDED","ACCOUNT_REMOVED","payload","account","setActiveAccount","document","addEventListener","container","getElementById","root","render","StrictMode","children","instance","fileName","_jsxFileName","lineNumber","columnNumber","console","error"],"sources":["/workspaces/InvoiceApp/src/index.js"],"sourcesContent":["// index.js (Your original index.js, which is now correct with the updated authConfig.js)\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css'; // Assuming this is at src/index.css\n\n// Import MSAL.js libraries\nimport { PublicClientApplication, EventType } from '@azure/msal-browser';\nimport { MsalProvider } from '@azure/msal-react';\n\n// Import your MSAL configuration\nimport { msalConfig } from './authConfig'; // This will now correctly import msalConfig from src/authConfig.js\n\n// Initialize the PublicClientApplication instance\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n// Optional: Add a callback for account changes to handle token acquisition silently\nmsalInstance.addEventCallback((event) => {\n  if (event.eventType === EventType.ACCOUNT_ADDED || event.eventType === EventType.ACCOUNT_REMOVED) {\n    if (event.payload.account) {\n      msalInstance.setActiveAccount(event.payload.account);\n    }\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(\n      <React.StrictMode>\n        {/* Wrap your App with MsalProvider to make the MSAL instance available */}\n        <MsalProvider instance={msalInstance}>\n          <App />\n        </MsalProvider>\n      </React.StrictMode>\n    );\n  } else {\n    console.error(\"Root element not found to render the React app.\");\n  }\n});"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa,CAAC,CAAC;;AAEtB;AACA,SAASC,uBAAuB,EAAEC,SAAS,QAAQ,qBAAqB;AACxE,SAASC,YAAY,QAAQ,mBAAmB;;AAEhD;AACA,SAASC,UAAU,QAAQ,cAAc,CAAC,CAAC;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,IAAIN,uBAAuB,CAACG,UAAU,CAAC;;AAE5D;AACAG,YAAY,CAACC,gBAAgB,CAAEC,KAAK,IAAK;EACvC,IAAIA,KAAK,CAACC,SAAS,KAAKR,SAAS,CAACS,aAAa,IAAIF,KAAK,CAACC,SAAS,KAAKR,SAAS,CAACU,eAAe,EAAE;IAChG,IAAIH,KAAK,CAACI,OAAO,CAACC,OAAO,EAAE;MACzBP,YAAY,CAACQ,gBAAgB,CAACN,KAAK,CAACI,OAAO,CAACC,OAAO,CAAC;IACtD;EACF;AACF,CAAC,CAAC;AAEFE,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;EACjD,IAAID,SAAS,EAAE;IACb,MAAME,IAAI,GAAGrB,UAAU,CAACmB,SAAS,CAAC;IAClCE,IAAI,CAACC,MAAM,cACTf,OAAA,CAACR,KAAK,CAACwB,UAAU;MAAAC,QAAA,eAEfjB,OAAA,CAACH,YAAY;QAACqB,QAAQ,EAAEjB,YAAa;QAAAgB,QAAA,eACnCjB,OAAA,CAACN,GAAG;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACpB,CAAC;EACH,CAAC,MAAM;IACLC,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;EAClE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}