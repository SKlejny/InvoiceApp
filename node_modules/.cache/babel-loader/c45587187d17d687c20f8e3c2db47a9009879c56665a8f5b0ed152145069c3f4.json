{"ast":null,"code":"var _jsxFileName = \"/workspaces/InvoiceApp/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { loginRequest } from './authConfig';\n\n// Hooks\nimport useGraph from './hooks/useGraph';\n\n// Pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport FileListPage from './pages/FileListPage';\n\n// Components\nimport LoadingSpinner from './components/LoadingSpinner';\nimport MessageDisplay from './components/MessageDisplay';\nimport Header from './components/Header';\nimport ConfirmModal from './components/ConfirmModal';\nimport ViewFileModal from './components/ViewFileModal';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\nimport { FOLDER_DETAILS } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const {\n    folders,\n    isLoading,\n    error,\n    fetchSharePointData,\n    moveSharePointFile,\n    downloadFileFromSharePoint\n  } = useGraph(instance, accounts);\n  const [userProfile, setUserProfile] = useState(null);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [isDarkMode, setIsDarkMode] = useState(() => localStorage.getItem('theme') === 'dark');\n  const [currentPage, setCurrentPage] = useState('login');\n  const [modal, setModal] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [viewedFileContent, setViewedFileContent] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => localStorage.getItem('excelOpeningPreference') || 'ask');\n  useEffect(() => {\n    if (isAuthenticated && accounts.length > 0) {\n      const fetchProfile = async () => {\n        try {\n          const response = await instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n          });\n          const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', {\n            headers: {\n              Authorization: `Bearer ${response.accessToken}`\n            }\n          });\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n          setCurrentPage('dashboard');\n          fetchSharePointData();\n        } catch (e) {\n          console.error(e);\n          showMessage('Could not fetch user profile.', 'error');\n        }\n      };\n      fetchProfile();\n    } else {\n      setCurrentPage('login');\n    }\n  }, [isAuthenticated, accounts, instance, fetchSharePointData]);\n  useEffect(() => {\n    if (error) showMessage(error, 'error');\n  }, [error]);\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n  const showMessage = (text, type = 'info') => setMessage({\n    text,\n    type\n  });\n  const handleMicrosoftLogin = () => instance.loginPopup(loginRequest).catch(e => console.error(e));\n  const handleLogout = () => instance.logoutPopup();\n  const handleExcelOpen = useCallback(file => {\n    if (excelOpeningPreference === 'ask') {\n      setModal('excelChoice');\n    } else if (excelOpeningPreference === 'web') {\n      window.open(file.webUrl, '_blank');\n    } else {\n      window.location.href = `ms-excel:ofe|u|${encodeURIComponent(file.webUrl)}`;\n    }\n  }, [excelOpeningPreference]);\n  const handleFileAction = useCallback(async (action, file) => {\n    setSelectedFile(file);\n    switch (action) {\n      case 'view':\n        if (file.type === 'xlsx') {\n          handleExcelOpen(file);\n        } else {\n          try {\n            const content = await downloadFileFromSharePoint(file);\n            setViewedFileContent(content);\n            setModal('viewFile');\n          } catch (e) {\n            showMessage(e.message, 'error');\n          }\n        }\n        break;\n      case 'approve':\n        setModal('confirmApproval');\n        break;\n      case 'sent':\n        setModal('confirmSent');\n        break;\n      default:\n        break;\n    }\n  }, [downloadFileFromSharePoint, handleExcelOpen]);\n  const handleConfirm = async () => {\n    if (!selectedFile || !modal) return;\n    const action = modal;\n    const originalFile = selectedFile;\n    setModal(null);\n    try {\n      let successMessage = '';\n      if (action === 'confirmApproval') {\n        const sourceFolderId = FOLDER_DETAILS.incomingInvoices.id;\n        const destFolderId = FOLDER_DETAILS.approvedInvoices.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File approved successfully.';\n      } else if (action === 'confirmSent') {\n        const sourceFolderId = FOLDER_DETAILS.publishedDocuments.id;\n        const destFolderId = FOLDER_DETAILS.sentDocuments.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File marked as sent.';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n    } catch (e) {\n      showMessage(e.message, 'error');\n    }\n  };\n  const renderPage = () => {\n    const pageDetails = Object.values(FOLDER_DETAILS).find(d => d.path === currentPage);\n    if (pageDetails) {\n      return /*#__PURE__*/_jsxDEV(FileListPage, {\n        title: pageDetails.title,\n        files: folders[pageDetails.path] || [],\n        onFileAction: handleFileAction,\n        pageType: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this);\n    }\n    if (currentPage === 'dashboard') {\n      return /*#__PURE__*/_jsxDEV(DashboardPage, {\n        userProfile: userProfile,\n        folders: folders,\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleMicrosoftLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }, this);\n  };\n  const closeModal = () => {\n    setModal(null);\n    setSelectedFile(null);\n    if (viewedFileContent && viewedFileContent.startsWith('blob:')) {\n      URL.revokeObjectURL(viewedFileContent);\n    }\n    setViewedFileContent(null);\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\",\n      children: /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: handleMicrosoftLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n      message: message,\n      onClearMessage: () => setMessage({\n        text: '',\n        type: ''\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onLogout: handleLogout,\n      onRefresh: fetchSharePointData,\n      onSettingsClick: () => setModal('settings'),\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-4 sm:p-6 md:p-8 max-w-7xl mx-auto w-full\",\n      children: renderPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      isOpen: modal === 'confirmApproval' || modal === 'confirmSent',\n      onClose: closeModal,\n      onConfirm: handleConfirm,\n      title: modal === 'confirmApproval' ? \"Confirm Approval\" : \"Confirm Sent\",\n      message: `Are you sure you want to proceed with this action for \"${selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name}\"?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewFileModal, {\n      isOpen: modal === 'viewFile',\n      onClose: closeModal,\n      file: selectedFile,\n      content: viewedFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExcelChoiceModal, {\n      isOpen: modal === 'excelChoice',\n      onClose: closeModal,\n      fileName: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || '',\n      onOpenWeb: () => {\n        window.open(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.webUrl, '_blank');\n        closeModal();\n      },\n      onOpenDesktop: () => {\n        window.location.href = `ms-excel:ofe|u|${encodeURIComponent(selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.webUrl)}`;\n        closeModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n      isOpen: modal === 'settings',\n      onClose: closeModal,\n      isDarkMode: isDarkMode,\n      toggleDarkMode: () => setIsDarkMode(prev => !prev),\n      currentExcelPreference: excelOpeningPreference,\n      onPreferenceChange: setExcelOpeningPreference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B+yTsZ1ZhJyR2ToXq1ZEjZynnLs=\", false, function () {\n  return [useMsal, useIsAuthenticated, useGraph];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMsal","useIsAuthenticated","loginRequest","useGraph","LoginPage","DashboardPage","FileListPage","LoadingSpinner","MessageDisplay","Header","ConfirmModal","ViewFileModal","ExcelChoiceModal","SettingsModal","FOLDER_DETAILS","jsxDEV","_jsxDEV","App","_s","instance","accounts","isAuthenticated","folders","isLoading","error","fetchSharePointData","moveSharePointFile","downloadFileFromSharePoint","userProfile","setUserProfile","message","setMessage","text","type","isDarkMode","setIsDarkMode","localStorage","getItem","currentPage","setCurrentPage","modal","setModal","selectedFile","setSelectedFile","viewedFileContent","setViewedFileContent","excelOpeningPreference","setExcelOpeningPreference","length","fetchProfile","response","acquireTokenSilent","account","graphResponse","fetch","headers","Authorization","accessToken","profile","json","e","console","showMessage","setItem","document","documentElement","classList","toggle","handleMicrosoftLogin","loginPopup","catch","handleLogout","logoutPopup","handleExcelOpen","file","window","open","webUrl","location","href","encodeURIComponent","handleFileAction","action","content","handleConfirm","originalFile","successMessage","sourceFolderId","incomingInvoices","id","destFolderId","approvedInvoices","publishedDocuments","sentDocuments","renderPage","pageDetails","Object","values","find","d","path","title","files","onFileAction","pageType","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","closeModal","startsWith","URL","revokeObjectURL","className","children","onClearMessage","onLogout","onRefresh","onSettingsClick","isOpen","onClose","onConfirm","name","onOpenWeb","onOpenDesktop","toggleDarkMode","prev","currentExcelPreference","onPreferenceChange","_c","$RefreshReg$"],"sources":["/workspaces/InvoiceApp/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useMsal, useIsAuthenticated } from '@azure/msal-react';\nimport { loginRequest } from './authConfig';\n\n// Hooks\nimport useGraph from './hooks/useGraph';\n\n// Pages\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport FileListPage from './pages/FileListPage';\n\n// Components\nimport LoadingSpinner from './components/LoadingSpinner';\nimport MessageDisplay from './components/MessageDisplay';\nimport Header from './components/Header';\nimport ConfirmModal from './components/ConfirmModal';\nimport ViewFileModal from './components/ViewFileModal';\nimport ExcelChoiceModal from './components/ExcelChoiceModal';\nimport SettingsModal from './components/SettingsModal';\n\nimport { FOLDER_DETAILS } from './utils/constants';\n\nfunction App() {\n  const { instance, accounts } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const {\n    folders,\n    isLoading,\n    error,\n    fetchSharePointData,\n    moveSharePointFile,\n    downloadFileFromSharePoint,\n  } = useGraph(instance, accounts);\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [isDarkMode, setIsDarkMode] = useState(() => localStorage.getItem('theme') === 'dark');\n\n  const [currentPage, setCurrentPage] = useState('login');\n  const [modal, setModal] = useState(null);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [viewedFileContent, setViewedFileContent] = useState(null);\n  const [excelOpeningPreference, setExcelOpeningPreference] = useState(() => localStorage.getItem('excelOpeningPreference') || 'ask');\n\n  useEffect(() => {\n    if (isAuthenticated && accounts.length > 0) {\n      const fetchProfile = async () => {\n        try {\n          const response = await instance.acquireTokenSilent({ ...loginRequest, account: accounts[0] });\n          const graphResponse = await fetch('https://graph.microsoft.com/v1.0/me', { headers: { Authorization: `Bearer ${response.accessToken}` } });\n          const profile = await graphResponse.json();\n          setUserProfile(profile);\n          setCurrentPage('dashboard');\n          fetchSharePointData();\n        } catch (e) {\n          console.error(e);\n          showMessage('Could not fetch user profile.', 'error');\n        }\n      };\n      fetchProfile();\n    } else {\n      setCurrentPage('login');\n    }\n  }, [isAuthenticated, accounts, instance, fetchSharePointData]);\n\n  useEffect(() => {\n    if (error) showMessage(error, 'error');\n  }, [error]);\n\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n\n  useEffect(() => {\n    localStorage.setItem('excelOpeningPreference', excelOpeningPreference);\n  }, [excelOpeningPreference]);\n\n  const showMessage = (text, type = 'info') => setMessage({ text, type });\n  const handleMicrosoftLogin = () => instance.loginPopup(loginRequest).catch(e => console.error(e));\n  const handleLogout = () => instance.logoutPopup();\n\n  const handleExcelOpen = useCallback((file) => {\n    if (excelOpeningPreference === 'ask') {\n      setModal('excelChoice');\n    } else if (excelOpeningPreference === 'web') {\n      window.open(file.webUrl, '_blank');\n    } else {\n      window.location.href = `ms-excel:ofe|u|${encodeURIComponent(file.webUrl)}`;\n    }\n  }, [excelOpeningPreference]);\n\n  const handleFileAction = useCallback(async (action, file) => {\n    setSelectedFile(file);\n    switch (action) {\n      case 'view':\n        if (file.type === 'xlsx') {\n          handleExcelOpen(file);\n        } else {\n          try {\n            const content = await downloadFileFromSharePoint(file);\n            setViewedFileContent(content);\n            setModal('viewFile');\n          } catch (e) {\n            showMessage(e.message, 'error');\n          }\n        }\n        break;\n      case 'approve':\n        setModal('confirmApproval');\n        break;\n      case 'sent':\n        setModal('confirmSent');\n        break;\n      default:\n        break;\n    }\n  }, [downloadFileFromSharePoint, handleExcelOpen]);\n\n  const handleConfirm = async () => {\n    if (!selectedFile || !modal) return;\n    const action = modal;\n    const originalFile = selectedFile;\n    setModal(null);\n    try {\n      let successMessage = '';\n      if (action === 'confirmApproval') {\n        const sourceFolderId = FOLDER_DETAILS.incomingInvoices.id;\n        const destFolderId = FOLDER_DETAILS.approvedInvoices.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File approved successfully.';\n      } else if (action === 'confirmSent') {\n        const sourceFolderId = FOLDER_DETAILS.publishedDocuments.id;\n        const destFolderId = FOLDER_DETAILS.sentDocuments.id;\n        await moveSharePointFile(originalFile.id, sourceFolderId, destFolderId);\n        successMessage = 'File marked as sent.';\n      }\n      showMessage(successMessage, 'success');\n      fetchSharePointData();\n    } catch (e) {\n      showMessage(e.message, 'error');\n    }\n  };\n\n  const renderPage = () => {\n    const pageDetails = Object.values(FOLDER_DETAILS).find(d => d.path === currentPage);\n    if (pageDetails) {\n      return (\n        <FileListPage\n          title={pageDetails.title}\n          files={folders[pageDetails.path] || []}\n          onFileAction={handleFileAction}\n          pageType={currentPage}\n        />\n      );\n    }\n    if (currentPage === 'dashboard') {\n      return <DashboardPage userProfile={userProfile} folders={folders} setCurrentPage={setCurrentPage} />;\n    }\n    return <LoginPage onLogin={handleMicrosoftLogin} />;\n  };\n\n  const closeModal = () => {\n    setModal(null);\n    setSelectedFile(null);\n    if (viewedFileContent && viewedFileContent.startsWith('blob:')) {\n      URL.revokeObjectURL(viewedFileContent);\n    }\n    setViewedFileContent(null);\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\">\n        <LoginPage onLogin={handleMicrosoftLogin} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-light-bg-canvas dark:bg-dark-bg-card text-text-primary-light dark:text-text-primary-dark\">\n      {isLoading && <LoadingSpinner />}\n      <MessageDisplay message={message} onClearMessage={() => setMessage({ text: '', type: '' })} />\n\n      <Header\n        onLogout={handleLogout}\n        onRefresh={fetchSharePointData}\n        onSettingsClick={() => setModal('settings')}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n      \n      <main className=\"p-4 sm:p-6 md:p-8 max-w-7xl mx-auto w-full\">\n        {renderPage()}\n      </main>\n\n      <ConfirmModal\n        isOpen={modal === 'confirmApproval' || modal === 'confirmSent'}\n        onClose={closeModal}\n        onConfirm={handleConfirm}\n        title={modal === 'confirmApproval' ? \"Confirm Approval\" : \"Confirm Sent\"}\n        message={`Are you sure you want to proceed with this action for \"${selectedFile?.name}\"?`}\n      />\n      <ViewFileModal\n        isOpen={modal === 'viewFile'}\n        onClose={closeModal}\n        file={selectedFile}\n        content={viewedFileContent}\n      />\n      <ExcelChoiceModal\n        isOpen={modal === 'excelChoice'}\n        onClose={closeModal}\n        fileName={selectedFile?.name || ''}\n        onOpenWeb={() => { window.open(selectedFile?.webUrl, '_blank'); closeModal(); }}\n        onOpenDesktop={() => { window.location.href = `ms-excel:ofe|u|${encodeURIComponent(selectedFile?.webUrl)}`; closeModal(); }}\n      />\n      <SettingsModal\n        isOpen={modal === 'settings'}\n        onClose={closeModal}\n        isDarkMode={isDarkMode}\n        toggleDarkMode={() => setIsDarkMode(prev => !prev)}\n        currentExcelPreference={excelOpeningPreference}\n        onPreferenceChange={setExcelOpeningPreference}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}